(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    294707,       6429]
NotebookOptionsPosition[    289284,       6248]
NotebookOutlinePosition[    289724,       6265]
CellTagsIndexPosition[    289681,       6262]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.45831624309375*^9, 3.45831627321875*^9}}],

Cell[BoxData["\<\"/home/milan\"\>"], "Output",
 CellChangeTimes->{{3.458316273828125*^9, 3.458316298734375*^9}, 
   3.511183159179496*^9, 3.511260246199892*^9, 3.511281124494413*^9, 
   3.511282723973281*^9, 3.5112830817526073`*^9, 3.511284316046826*^9, 
   3.511284577389181*^9, 3.511321004702119*^9, 3.511328361763983*^9, 
   3.5113445251383047`*^9, 3.511344586372662*^9, 3.511344628588059*^9, {
   3.5113446905267353`*^9, 3.511344761189458*^9}, 3.5113447957472*^9, 
   3.511348976402287*^9, 3.5113490258351316`*^9, 3.511349423979637*^9, 
   3.511349468020335*^9, 3.511349520911502*^9, {3.511349590411544*^9, 
   3.511349641137344*^9}, 3.511349673289125*^9, 3.511351934399537*^9, 
   3.5113520414723682`*^9, 3.514605919556615*^9, 3.5146060467174473`*^9, 
   3.514606909258102*^9, 3.514625114675062*^9, 3.514625163710688*^9, {
   3.514628573003305*^9, 3.5146285839790573`*^9}, 3.514634020504017*^9, 
   3.5146907505284348`*^9, 3.514693174730212*^9, 3.51469889602643*^9, 
   3.514698939404344*^9, 3.514703932205511*^9, 3.515838568045512*^9, 
   3.516866432179796*^9, 3.516877015185849*^9, 3.5172911395503883`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"\[Mu]_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "L"], 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], "2"], 
    RowBox[{"LegendreP", "[", 
     RowBox[{"n", ",", "\[Mu]"}], "]"}], " ", 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "z", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.45812214278125*^9, 3.458122149046875*^9}, {
   3.458122215015625*^9, 3.458122336828125*^9}, {3.458122398546875*^9, 
   3.45812242484375*^9}, {3.4581233975*^9, 3.458123415328125*^9}, {
   3.4581238006875*^9, 3.45812380725*^9}, 3.4581477805*^9, {
   3.4582733744375*^9, 3.458273376359375*^9}, {3.511183195694076*^9, 
   3.511183205056978*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.511183434712954*^9, 3.511183436093316*^9}, 
   3.511186023414919*^9, {3.511186513983778*^9, 3.511186529977191*^9}, 
   3.511193503700611*^9, 3.511198703384798*^9, 3.511202493298025*^9, 
   3.511204091808771*^9, 3.511244027352944*^9, 3.511260122317914*^9, 
   3.511260181439172*^9, 3.5112602495326014`*^9, 3.511261217964011*^9, {
   3.5112633297375193`*^9, 3.511263332247952*^9}, 3.511281119756188*^9, 
   3.511282709965703*^9, 3.511283075315803*^9, 3.511284311021352*^9, 
   3.511284573327456*^9, 3.511320107177246*^9, 3.5113208206250267`*^9, 
   3.511320999398205*^9, {3.511328357782628*^9, 3.511328357936368*^9}, {
   3.511328713487506*^9, 3.511328713591861*^9}, {3.511334493233968*^9, 
   3.511334493286051*^9}, {3.511344521206007*^9, 3.5113445212824183`*^9}, {
   3.5113445842517*^9, 3.511344605708233*^9}, {3.511344687536091*^9, 
   3.511344758805469*^9}, 3.511344793808539*^9, 3.511347322643062*^9, 
   3.5113489727381687`*^9, 3.511349024429093*^9, {3.511349460595093*^9, 
   3.511349461578451*^9}, 3.5113495194368973`*^9, {3.51134958530554*^9, 
   3.5113496396279716`*^9}, {3.5113496702757187`*^9, 3.511349670332086*^9}, 
   3.511351930844843*^9, {3.511352037998671*^9, 3.511352038195541*^9}, 
   3.514604546337442*^9, 3.514606045369644*^9, 3.514606907047196*^9, {
   3.514625108106606*^9, 3.514625108159231*^9}, {3.514625160015154*^9, 
   3.514625160057001*^9}, {3.5146285712920628`*^9, 3.514628580168375*^9}, {
   3.514634017833006*^9, 3.514634017928426*^9}, 3.51469074887234*^9, 
   3.514693172805154*^9, {3.514698890974867*^9, 3.514698891979401*^9}, {
   3.5146989346523113`*^9, 3.5146989357181664`*^9}, {3.5147039246463547`*^9, 
   3.514703926276889*^9}, {3.516866428090145*^9, 3.516866429103354*^9}, 
   3.517290881534741*^9}],

Cell[BoxData[
 RowBox[{"Replace", " ", "Q", " ", "by", " ", 
  FractionBox["\[DifferentialD]", 
   RowBox[{"\[DifferentialD]", "z"}]]}]], "Text",
 CellChangeTimes->{{3.45818813265625*^9, 3.458188144203125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "n_", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"n", "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]], "Q", " ", 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"n", "+", "1"}]], "[", "z", "]"}]}], " ", "+", 
    RowBox[{
     FractionBox["n", 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]], "Q", " ", 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"n", "-", "1"}]], "[", "z", "]"}]}], "+", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "n"}]], "[", "z", "]"}], 
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", "z", "]"}]}]}], "\[Equal]", 
   RowBox[{
    SubscriptBox["S", "n"], "[", "z", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.458187139609375*^9, 3.458187280578125*^9}, {
   3.458187632015625*^9, 3.458187662421875*^9}, {3.458187728984375*^9, 
   3.458187803234375*^9}, {3.458188008453125*^9, 3.458188075359375*^9}, {
   3.458188108125*^9, 3.458188125859375*^9}, {3.458214952609375*^9, 
   3.458214966125*^9}, {3.45821502665625*^9, 3.4582150574375*^9}, {
   3.511203090436952*^9, 3.511203132014764*^9}, {3.511203174602572*^9, 
   3.511203189284235*^9}, {3.5112038634838743`*^9, 3.51120387570855*^9}, 
   3.511357715928198*^9, {3.511357772698263*^9, 3.511357775330196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"n", " ", "Q", " ", 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]], "[", "z", "]"}]}], 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "n"}]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}], " ", "Q", " ", 
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"1", "+", "n"}]], "[", "z", "]"}]}], 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "n"}]}]], "+", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", "z", "]"}], " ", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", 
      RowBox[{"a", ",", "n"}]], "[", "z", "]"}]}]}], "\[Equal]", 
  RowBox[{
   SubscriptBox["S", "n"], "[", "z", "]"}]}]], "Output",
 CellChangeTimes->{
  3.5111930642433233`*^9, 3.511193506086832*^9, 3.5111951213192577`*^9, 
   3.511198706001265*^9, 3.51120249683757*^9, {3.511203869989249*^9, 
   3.511203880459371*^9}, 3.511204095913867*^9, 3.5112437903816023`*^9, 
   3.511244031803752*^9, 3.51126012423685*^9, 3.511260183252357*^9, 
   3.5112602515154333`*^9, 3.511261221652861*^9, 3.511281124698098*^9, 
   3.511282724239526*^9, 3.51128308193781*^9, 3.5112843163664503`*^9, 
   3.511284577537108*^9, 3.511320112674045*^9, 3.511320825895196*^9, 
   3.511321004819772*^9, 3.5113283618923483`*^9, 3.511328718184134*^9, 
   3.5113344967452383`*^9, 3.511344525297998*^9, 3.5113445864925833`*^9, 
   3.511344628613645*^9, {3.511344690654901*^9, 3.511344761342123*^9}, 
   3.5113447958779697`*^9, 3.511347326234779*^9, 3.511348976561967*^9, 
   3.5113490259739*^9, 3.511349424125133*^9, 3.511349468187026*^9, 
   3.511349521067861*^9, {3.511349590546994*^9, 3.51134964127277*^9}, 
   3.5113496734338703`*^9, 3.51135193455688*^9, 3.511352041609169*^9, 
   3.511357717030892*^9, 3.511357777064291*^9, 3.514604551607284*^9, 
   3.514605919809052*^9, 3.514606046918489*^9, 3.514606909446294*^9, 
   3.514621832541297*^9, 3.514625114886981*^9, 3.51462516394666*^9, {
   3.5146285732554703`*^9, 3.5146285842449903`*^9}, 3.514634020725387*^9, 
   3.5146907508022537`*^9, 3.514693174893058*^9, 3.514698896187562*^9, 
   3.514698939573223*^9, 3.514703932381301*^9, 3.515838568346656*^9, 
   3.5168664324002542`*^9, 3.5168770154678717`*^9, 3.517291139816223*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"P", "[", "n", "]"}], "/.", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "\[GreaterEqual]", "1"}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["S", "n"], "[", "z", "]"}], "\[Rule]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["S", "n"], "[", "z", "]"}], "\[Rule]", 
          RowBox[{
           SubscriptBox["S", "n"], "[", "z", "]"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "L"}], "}"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", 
       RowBox[{"L", "+", "1"}]], "[", "z", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.45818867740625*^9, 3.458188687046875*^9}, {
   3.458188775546875*^9, 3.458188780734375*^9}, {3.45818884578125*^9, 
   3.458188894453125*^9}, {3.45818895790625*^9, 3.458188958328125*^9}, {
   3.458227745859375*^9, 3.458227777765625*^9}, {3.4582278120625*^9, 
   3.45822783478125*^9}, {3.45822786678125*^9, 3.458227929453125*^9}, {
   3.5111917196508913`*^9, 3.511191720074617*^9}, 3.511193072421953*^9, {
   3.511193224200265*^9, 3.51119322650114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "eqns", "]"}]], "Input",
 CellChangeTimes->{{3.5111930737322273`*^9, 3.5111930770133553`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["S", "0"], "[", "z", "]"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "3"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "3"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["2", "5"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "z", "]"}]}], "+", 
         RowBox[{
          FractionBox["3", "5"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "3"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["3", "7"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
         RowBox[{
          FractionBox["4", "7"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "3"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["4", "9"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "3"], "[", "z", "]"}]}], "+", 
         RowBox[{
          FractionBox["5", "9"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "5"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "4"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["5", "11"], " ", "Q", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "5"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.511193077458138*^9, 3.5111932300882797`*^9, 3.5111935078930283`*^9, 
   3.511195123094805*^9, 3.511198710163909*^9, 3.511202499463912*^9, 
   3.5112038840253973`*^9, 3.51120409745289*^9, 3.5112440333238153`*^9, {
   3.511260126988483*^9, 3.511260147820158*^9}, 3.511260289736938*^9, 
   3.511261223405405*^9, 3.511281124890584*^9, 3.511282724254088*^9, 
   3.511283082117695*^9, 3.511284316461514*^9, 3.511284577649144*^9, 
   3.5113201152875967`*^9, 3.511320827384222*^9, 3.51132100491654*^9, 
   3.5113283620078983`*^9, 3.511328719875333*^9, 3.511334498422542*^9, 
   3.5113445254238987`*^9, 3.511344586613665*^9, 3.511344628720187*^9, {
   3.511344690765161*^9, 3.511344761358481*^9}, 3.511344795894135*^9, 
   3.511347329649077*^9, 3.51134897666122*^9, 3.5113490259949913`*^9, 
   3.511349424140229*^9, 3.511349468207595*^9, 3.5113495210908737`*^9, {
   3.511349590567563*^9, 3.511349641295035*^9}, 3.511349673575225*^9, 
   3.5113519346649523`*^9, 3.511352041636125*^9, 3.511357721248476*^9, 
   3.511357778871347*^9, 3.514604554490424*^9, 3.514605920012949*^9, 
   3.5146060470545053`*^9, 3.5146069096697083`*^9, 3.51462183409186*^9, 
   3.514625115118623*^9, 3.5146251641743813`*^9, {3.514628573441852*^9, 
   3.5146285844592953`*^9}, 3.514634020938285*^9, 3.514690750926806*^9, 
   3.51469317502269*^9, 3.5146988962886457`*^9, 3.5146989396934423`*^9, 
   3.514703932525551*^9, 3.515838568558766*^9, 3.516866432522214*^9, 
   3.516877015881873*^9, 3.5172911399094353`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"oddn", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "+", "1"}], ")"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evenn", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"2", "n"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "+", "1"}], ")"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.51119177011484*^9, 3.5111918155596857`*^9}, {
  3.511192684148036*^9, 3.511192690078566*^9}, {3.51119275459908*^9, 
  3.511192775315415*^9}, {3.511192866711084*^9, 3.5111928920744133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"oddmom", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", "z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "L"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "evenn", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"evenmom", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "n"], "[", "z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "L"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "oddn", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.511192900976054*^9, 3.5111929646491623`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "1"], "[", "z", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Phi]", "3"], "[", "z", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Phi]", "5"], "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.51119291666302*^9, 3.511192970911405*^9}, 
   3.511193233211772*^9, 3.511193512875553*^9, 3.5111951257487173`*^9, 
   3.511198713177685*^9, 3.5112025051071157`*^9, 3.511203887957388*^9, 
   3.511204099536577*^9, 3.5112437955548897`*^9, 3.5112440351462317`*^9, {
   3.511260130357972*^9, 3.5112601499132013`*^9}, 3.511260293572277*^9, 
   3.511261226283737*^9, 3.511281125063011*^9, 3.5112827244320107`*^9, 
   3.511283082130862*^9, 3.511284316474188*^9, 3.5112845777662163`*^9, 
   3.5113201395988817`*^9, 3.5113208291873417`*^9, 3.5113210050224543`*^9, 
   3.5113283620259247`*^9, 3.511328980547605*^9, 3.51133450107825*^9, 
   3.5113445255449944`*^9, 3.5113445866350117`*^9, 3.51134462874551*^9, {
   3.511344690797327*^9, 3.5113447614667807`*^9}, 3.511344796047716*^9, 
   3.511347331754282*^9, 3.5113489766850348`*^9, 3.511349026107951*^9, 
   3.511349424239037*^9, 3.511349468316304*^9, 3.511349521205452*^9, {
   3.511349590680456*^9, 3.511349641417932*^9}, 3.511349673727581*^9, 
   3.511351934797658*^9, 3.511352041793865*^9, 3.5113577290101624`*^9, 
   3.5113577805625668`*^9, 3.5146045604496813`*^9, 3.514605920188098*^9, 
   3.514606047260548*^9, 3.514606909878109*^9, 3.51462183560789*^9, 
   3.514625115134459*^9, 3.514625164404666*^9, {3.514628573668783*^9, 
   3.514628584475675*^9}, 3.51463402096764*^9, 3.5146907509576483`*^9, 
   3.514693175179796*^9, 3.5146988964248867`*^9, 3.5146989398332253`*^9, 
   3.51470393254311*^9, 3.515838568726307*^9, 3.516866432668227*^9, 
   3.5168770160783453`*^9, 3.517291140112843*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.51119291666302*^9, 3.511192970911405*^9}, 
   3.511193233211772*^9, 3.511193512875553*^9, 3.5111951257487173`*^9, 
   3.511198713177685*^9, 3.5112025051071157`*^9, 3.511203887957388*^9, 
   3.511204099536577*^9, 3.5112437955548897`*^9, 3.5112440351462317`*^9, {
   3.511260130357972*^9, 3.5112601499132013`*^9}, 3.511260293572277*^9, 
   3.511261226283737*^9, 3.511281125063011*^9, 3.5112827244320107`*^9, 
   3.511283082130862*^9, 3.511284316474188*^9, 3.5112845777662163`*^9, 
   3.5113201395988817`*^9, 3.5113208291873417`*^9, 3.5113210050224543`*^9, 
   3.5113283620259247`*^9, 3.511328980547605*^9, 3.51133450107825*^9, 
   3.5113445255449944`*^9, 3.5113445866350117`*^9, 3.51134462874551*^9, {
   3.511344690797327*^9, 3.5113447614667807`*^9}, 3.511344796047716*^9, 
   3.511347331754282*^9, 3.5113489766850348`*^9, 3.511349026107951*^9, 
   3.511349424239037*^9, 3.511349468316304*^9, 3.511349521205452*^9, {
   3.511349590680456*^9, 3.511349641417932*^9}, 3.511349673727581*^9, 
   3.511351934797658*^9, 3.511352041793865*^9, 3.5113577290101624`*^9, 
   3.5113577805625668`*^9, 3.5146045604496813`*^9, 3.514605920188098*^9, 
   3.514606047260548*^9, 3.514606909878109*^9, 3.51462183560789*^9, 
   3.514625115134459*^9, 3.514625164404666*^9, {3.514628573668783*^9, 
   3.514628584475675*^9}, 3.51463402096764*^9, 3.5146907509576483`*^9, 
   3.514693175179796*^9, 3.5146988964248867`*^9, 3.5146989398332253`*^9, 
   3.51470393254311*^9, 3.515838568726307*^9, 3.516866432668227*^9, 
   3.5168770160783453`*^9, 3.517291140114832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oddWrtEven", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"eqns", "[", 
     RowBox[{"[", "evenn", "]"}], "]"}], ",", "oddmom"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4582276326875*^9, 3.45822764625*^9}, {
   3.45822793853125*^9, 3.458227991609375*^9}, {3.458228163375*^9, 
   3.45822819828125*^9}, {3.511191734750399*^9, 3.511191767970848*^9}, 
   3.511191801717226*^9, {3.511192816168118*^9, 3.511192818170897*^9}, {
   3.511192989617923*^9, 3.511193031050684*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "[", "z", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "Q"}], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
       RowBox[{"2", " ", "Q", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], 
      RowBox[{"3", " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "3"], "[", "z", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "Q", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
       RowBox[{"4", " ", "Q", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], 
      RowBox[{"7", " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "5"], "[", "z", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"5", " ", "Q", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], 
       RowBox[{"11", " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.51119304327665*^9, 3.51119308659896*^9, 3.511193234213092*^9, 
   3.511193515079701*^9, 3.5111951268547*^9, 3.5111987142828207`*^9, 
   3.511202506324127*^9, 3.51120390062502*^9, 3.5112041008689327`*^9, 
   3.511243796732691*^9, 3.5112440360119963`*^9, {3.511260132187498*^9, 
   3.511260150646512*^9}, 3.511260295000589*^9, 3.511261228110516*^9, 
   3.511281125224471*^9, 3.511282724608459*^9, 3.511283082296488*^9, 
   3.5112843165690393`*^9, 3.5112845778869257`*^9, 3.511320141023299*^9, 
   3.511320830436551*^9, 3.511321005034885*^9, 3.511328362158763*^9, {
   3.5113289737722692`*^9, 3.511328981603244*^9}, 3.511334502351593*^9, 
   3.51134452556705*^9, 3.511344586745178*^9, 3.511344628856928*^9, {
   3.511344690812674*^9, 3.511344761478422*^9}, 3.511344796166052*^9, 
   3.511347332794332*^9, 3.511348976695785*^9, 3.511349026118165*^9, 
   3.511349424249874*^9, 3.511349468338552*^9, 3.511349521225931*^9, {
   3.511349590784643*^9, 3.5113496415291967`*^9}, 3.511349673963244*^9, 
   3.511351934827721*^9, 3.5113520419175577`*^9, 3.5113577300589542`*^9, 
   3.511357781266994*^9, 3.514604563168631*^9, 3.5146059203815327`*^9, 
   3.514606047428916*^9, 3.514606910025103*^9, 3.514621836214716*^9, 
   3.514625115361484*^9, 3.514625164427331*^9, {3.514628573941203*^9, 
   3.514628584688684*^9}, 3.514634020987*^9, 3.514690751096929*^9, 
   3.5146931753196*^9, 3.514698896530465*^9, 3.514698939932534*^9, 
   3.5147039326842422`*^9, 3.5158385688724937`*^9, 3.516866432797488*^9, 
   3.5168770166798983`*^9, 3.5172911402124434`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SPL", "=", 
   RowBox[{
    RowBox[{"eqns", "[", 
     RowBox[{"[", "oddn", "]"}], "]"}], "/.", 
    RowBox[{"oddWrtEven", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.458228157015625*^9, 3.45822820375*^9}, {
  3.45822862803125*^9, 3.45822862990625*^9}, {3.511193106327012*^9, 
  3.511193148589272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "SPL", "]"}]], "Input",
 CellChangeTimes->{{3.511193149864786*^9, 3.5111931532293577`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
         FractionBox[
          RowBox[{"Q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Q"}], " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
             RowBox[{"2", " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], ")"}]}], 
          RowBox[{"3", " ", 
           RowBox[{
            SubscriptBox["\[CapitalSigma]", 
             RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["S", "0"], "[", "z", "]"}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "Q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Q"}], " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
             RowBox[{"2", " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], ")"}]}], 
          RowBox[{"15", " ", 
           RowBox[{
            SubscriptBox["\[CapitalSigma]", 
             RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "+", 
         FractionBox[
          RowBox[{"3", " ", "Q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
             RowBox[{"4", " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], ")"}]}], 
          RowBox[{"35", " ", 
           RowBox[{
            SubscriptBox["\[CapitalSigma]", 
             RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]]}], "\[Equal]", 
        "0"}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "Q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
             RowBox[{"4", " ", "Q", " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], ")"}]}], 
          RowBox[{"63", " ", 
           RowBox[{
            SubscriptBox["\[CapitalSigma]", 
             RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "4"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}], "-", 
         FractionBox[
          RowBox[{"25", " ", 
           SuperscriptBox["Q", "2"], " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], 
          RowBox[{"99", " ", 
           RowBox[{
            SubscriptBox["\[CapitalSigma]", 
             RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.511193153703106*^9, 3.511193237104047*^9, 3.511193646013932*^9, 
   3.5111951288951406`*^9, 3.511202334155098*^9, 3.511202509063793*^9, 
   3.511203904210559*^9, 3.511204105011281*^9, 3.511243799525165*^9, 
   3.511244039061863*^9, 3.5112602986724358`*^9, 3.511261230260035*^9, 
   3.511281125387817*^9, 3.5112827246271877`*^9, 3.5112830824697104`*^9, 
   3.511284316606443*^9, 3.511284578004425*^9, 3.511320144671545*^9, 
   3.5113208321794653`*^9, 3.511321005068955*^9, 3.511328362175086*^9, 
   3.511328983501029*^9, 3.511334505015175*^9, 3.511344525691155*^9, 
   3.511344586827318*^9, 3.511344628888781*^9, {3.5113446909256487`*^9, 
   3.511344761572125*^9}, 3.5113447962724457`*^9, 3.5113473345100727`*^9, 
   3.511348976798272*^9, 3.511349026137664*^9, 3.511349424266181*^9, 
   3.511349468354909*^9, 3.5113495212441177`*^9, {3.511349590921391*^9, 
   3.511349641725297*^9}, 3.511349673986168*^9, 3.511351934850252*^9, 
   3.511352042125594*^9, 3.5113577322014437`*^9, 3.511357782993783*^9, 
   3.5146059203995447`*^9, 3.514606047461727*^9, 3.514606910213709*^9, 
   3.514621837464127*^9, 3.514625115642416*^9, 3.514625164447708*^9, {
   3.514628574216734*^9, 3.5146285847146807`*^9}, 3.514634021229794*^9, 
   3.51469075112182*^9, 3.514693175332121*^9, 3.514698896661806*^9, 
   3.5146989400777063`*^9, 3.514703932808448*^9, 3.515838569005636*^9, 
   3.51686643280791*^9, 3.516877017103951*^9, 3.517291140354789*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"oddPseudoFluxes", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", 
          RowBox[{"n", "+", "1"}]], "[", "z", "]"}]}], " ", "+", 
       RowBox[{"n", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", 
          RowBox[{"n", "-", "1"}]], "[", "z", "]"}]}]}], "==", 
      RowBox[{
       SubscriptBox["F", "n"], "[", "z", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", 
      RowBox[{"L", "+", "1"}]], "[", "z", "]"}], "\[Rule]", 
    "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"pseudoDiffusions", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}], 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "n"}]], "[", "z", "]"}]}]], "\[Rule]", 
     RowBox[{
      SubscriptBox["D", "n"], "[", "z", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.511198870770874*^9, 3.511198893430962*^9}, {
   3.51119896743093*^9, 3.511198992928875*^9}, {3.5111991093340263`*^9, 
   3.511199123137375*^9}, {3.511199154122465*^9, 3.511199174917679*^9}, 
   3.511199248039833*^9, {3.511199339842208*^9, 3.511199377349909*^9}, {
   3.511199412373128*^9, 3.511199481475945*^9}, 3.5111995140756283`*^9, {
   3.5111996191394587`*^9, 3.51119964075972*^9}, {3.51119978280777*^9, 
   3.511199797957222*^9}, {3.51119984192183*^9, 3.511199873777314*^9}, {
   3.511199946402473*^9, 3.5112000558439837`*^9}, {3.5112000961881447`*^9, 
   3.511200108909154*^9}, {3.511202196227047*^9, 3.511202196403117*^9}, {
   3.511202485927823*^9, 3.5112024876325912`*^9}, {3.511204065899312*^9, 
   3.511204067014629*^9}, {3.511204183541585*^9, 3.511204199201779*^9}, {
   3.5112045459606247`*^9, 3.511204547218207*^9}, {3.51124409569376*^9, 
   3.511244114424789*^9}, {3.511248106834757*^9, 3.511248116422564*^9}, {
   3.511248561717697*^9, 3.511248562052051*^9}, {3.5112495259502153`*^9, 
   3.511249559213081*^9}, {3.5112564023441677`*^9, 3.511256403425394*^9}, {
   3.514636836673696*^9, 3.514636896166847*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
   RowBox[{
    RowBox[{"5", " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
    RowBox[{
     SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511204553814108*^9, 3.51124380844508*^9, 3.511244040555893*^9, {
   3.5112440964722767`*^9, 3.511244115705102*^9}, {3.51124810731037*^9, 
   3.5112481170380163`*^9}, 3.511248563531127*^9, 3.5112495604330387`*^9, 
   3.511256404484826*^9, 3.511260323428945*^9, 3.51126123303428*^9, 
   3.5112811254010344`*^9, 3.511282724632967*^9, 3.511283082477172*^9, 
   3.511284316706017*^9, 3.5112845781036797`*^9, 3.511320152556984*^9, 
   3.511320833484158*^9, 3.5113210051698837`*^9, 3.51132836218556*^9, 
   3.511328985006991*^9, 3.511334506168387*^9, 3.511344525705296*^9, 
   3.511344586847087*^9, 3.5113446288988647`*^9, {3.511344691039674*^9, 
   3.511344761586528*^9}, 3.511344796367784*^9, 3.511347335626676*^9, 
   3.5113489768145323`*^9, 3.511349026245634*^9, 3.5113494243437777`*^9, 
   3.511349468477655*^9, 3.5113495213899403`*^9, {3.51134959107502*^9, 
   3.5113496417428417`*^9}, 3.511349674001697*^9, 3.5113519349967127`*^9, 
   3.511352042144268*^9, 3.514605920405757*^9, 3.514606047468066*^9, 
   3.514606910221033*^9, 3.5146218395240107`*^9, 3.5146251158535967`*^9, 
   3.5146251646612253`*^9, {3.5146285744593554`*^9, 3.514628584926865*^9}, 
   3.5146340215330963`*^9, {3.514636846846364*^9, 3.514636897039921*^9}, 
   3.514690751135931*^9, 3.514693175340083*^9, 3.514698896824737*^9, 
   3.5146989401942997`*^9, 3.514703932935717*^9, 3.515838569017436*^9, 
   3.51686643281971*^9, 3.516877017115097*^9, 3.517291140371154*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"3", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]], "\[Rule]", 
    RowBox[{
     SubscriptBox["D", "1"], "[", "z", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"7", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]], "\[Rule]", 
    RowBox[{
     SubscriptBox["D", "3"], "[", "z", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"11", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]], "\[Rule]", 
    RowBox[{
     SubscriptBox["D", "5"], "[", "z", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511204553814108*^9, 3.51124380844508*^9, 3.511244040555893*^9, {
   3.5112440964722767`*^9, 3.511244115705102*^9}, {3.51124810731037*^9, 
   3.5112481170380163`*^9}, 3.511248563531127*^9, 3.5112495604330387`*^9, 
   3.511256404484826*^9, 3.511260323428945*^9, 3.51126123303428*^9, 
   3.5112811254010344`*^9, 3.511282724632967*^9, 3.511283082477172*^9, 
   3.511284316706017*^9, 3.5112845781036797`*^9, 3.511320152556984*^9, 
   3.511320833484158*^9, 3.5113210051698837`*^9, 3.51132836218556*^9, 
   3.511328985006991*^9, 3.511334506168387*^9, 3.511344525705296*^9, 
   3.511344586847087*^9, 3.5113446288988647`*^9, {3.511344691039674*^9, 
   3.511344761586528*^9}, 3.511344796367784*^9, 3.511347335626676*^9, 
   3.5113489768145323`*^9, 3.511349026245634*^9, 3.5113494243437777`*^9, 
   3.511349468477655*^9, 3.5113495213899403`*^9, {3.51134959107502*^9, 
   3.5113496417428417`*^9}, 3.511349674001697*^9, 3.5113519349967127`*^9, 
   3.511352042144268*^9, 3.514605920405757*^9, 3.514606047468066*^9, 
   3.514606910221033*^9, 3.5146218395240107`*^9, 3.5146251158535967`*^9, 
   3.5146251646612253`*^9, {3.5146285744593554`*^9, 3.514628584926865*^9}, 
   3.5146340215330963`*^9, {3.514636846846364*^9, 3.514636897039921*^9}, 
   3.514690751135931*^9, 3.514693175340083*^9, 3.514698896824737*^9, 
   3.5146989401942997`*^9, 3.514703932935717*^9, 3.515838569017436*^9, 
   3.51686643281971*^9, 3.516877017115097*^9, 3.517291140374114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lower", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    FractionBox["n", 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}]], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "L", ",", "2"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"centr", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "+", "1"}], 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}]], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "L", ",", "2"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.511099559635169*^9, 3.511099786572399*^9}, {
   3.511252347111068*^9, 3.511252419805832*^9}, {3.511252450645809*^9, 
   3.51125247877311*^9}, {3.511252517000834*^9, 3.511252537606093*^9}, 
   3.5112525744886827`*^9, {3.511252620403894*^9, 3.51125273232136*^9}, {
   3.511252844411414*^9, 3.5112529034653187`*^9}, {3.51125333405569*^9, 
   3.5112533688901367`*^9}, {3.5112552371421947`*^9, 3.511255241693265*^9}, {
   3.511257897717341*^9, 3.5112579027375526`*^9}, {3.511319808428637*^9, 
   3.511319838243514*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "5"], ",", 
   FractionBox["4", "9"]}], "}"}]], "Output",
 CellChangeTimes->{{3.51125245245356*^9, 3.511252480235742*^9}, {
   3.5112525319130297`*^9, 3.511252538137473*^9}, {3.511252708634015*^9, 
   3.511252733604607*^9}, {3.511252868003811*^9, 3.511252875784648*^9}, 
   3.5112529064434547`*^9, {3.511253355566744*^9, 3.5112533693386106`*^9}, {
   3.511255231823904*^9, 3.5112552421318293`*^9}, 3.511257903863008*^9, 
   3.511260325804338*^9, 3.511261235002472*^9, 3.511281125410553*^9, 
   3.5112827247934933`*^9, 3.511283082633266*^9, 3.511284316716485*^9, 
   3.51128457821321*^9, 3.511320154225878*^9, 3.511320834984828*^9, 
   3.511321005180107*^9, 3.511328362194388*^9, 3.511328986531975*^9, 
   3.511334507059203*^9, 3.511344525719863*^9, 3.511344586951583*^9, 
   3.511344629009674*^9, {3.5113446911893*^9, 3.511344761692189*^9}, 
   3.5113447964644327`*^9, 3.5113473369781103`*^9, 3.5113489768287077`*^9, 
   3.511349026339192*^9, 3.5113494243671713`*^9, 3.5113494684925127`*^9, 
   3.511349521535494*^9, {3.5113495911793756`*^9, 3.511349641851069*^9}, 
   3.511349674011445*^9, 3.5113519351220903`*^9, 3.5113520421566877`*^9, 
   3.5146059205884857`*^9, 3.514606047663898*^9, 3.514606910229561*^9, 
   3.514621840677692*^9, 3.514625116132489*^9, 3.514625164931004*^9, {
   3.514628574471092*^9, 3.5146285852053003`*^9}, 3.51463402190527*^9, 
   3.514690751146345*^9, 3.514693175478273*^9, 3.514698897954598*^9, 
   3.514698940368496*^9, 3.5147039331083813`*^9, 3.515838569025667*^9, 
   3.516866432829603*^9, 3.516877017124899*^9, 3.517291140384123*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["5", "9"]}], "}"}]], "Output",
 CellChangeTimes->{{3.51125245245356*^9, 3.511252480235742*^9}, {
   3.5112525319130297`*^9, 3.511252538137473*^9}, {3.511252708634015*^9, 
   3.511252733604607*^9}, {3.511252868003811*^9, 3.511252875784648*^9}, 
   3.5112529064434547`*^9, {3.511253355566744*^9, 3.5112533693386106`*^9}, {
   3.511255231823904*^9, 3.5112552421318293`*^9}, 3.511257903863008*^9, 
   3.511260325804338*^9, 3.511261235002472*^9, 3.511281125410553*^9, 
   3.5112827247934933`*^9, 3.511283082633266*^9, 3.511284316716485*^9, 
   3.51128457821321*^9, 3.511320154225878*^9, 3.511320834984828*^9, 
   3.511321005180107*^9, 3.511328362194388*^9, 3.511328986531975*^9, 
   3.511334507059203*^9, 3.511344525719863*^9, 3.511344586951583*^9, 
   3.511344629009674*^9, {3.5113446911893*^9, 3.511344761692189*^9}, 
   3.5113447964644327`*^9, 3.5113473369781103`*^9, 3.5113489768287077`*^9, 
   3.511349026339192*^9, 3.5113494243671713`*^9, 3.5113494684925127`*^9, 
   3.511349521535494*^9, {3.5113495911793756`*^9, 3.511349641851069*^9}, 
   3.511349674011445*^9, 3.5113519351220903`*^9, 3.5113520421566877`*^9, 
   3.5146059205884857`*^9, 3.514606047663898*^9, 3.514606910229561*^9, 
   3.514621840677692*^9, 3.514625116132489*^9, 3.514625164931004*^9, {
   3.514628574471092*^9, 3.5146285852053003`*^9}, 3.51463402190527*^9, 
   3.514690751146345*^9, 3.514693175478273*^9, 3.514698897954598*^9, 
   3.514698940368496*^9, 3.5147039331083813`*^9, 3.515838569025667*^9, 
   3.516866432829603*^9, 3.516877017124899*^9, 3.51729114038579*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Adata", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"L", ">", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "lower"}], ",", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "centr"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Band", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "centr"}], "}"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.511320289582745*^9, 3.5113203145331297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"Adata", ",", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"L", "/", "2"}], "]"}], "+", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.511099793187874*^9, 3.511099811008842*^9}, {
  3.511099900495983*^9, 3.5110999068878717`*^9}, {3.511250206927154*^9, 
  3.511250211433297*^9}, {3.511252770660775*^9, 3.5112527735603247`*^9}, {
  3.5112528519363728`*^9, 3.511252862988221*^9}, {3.5112552623202543`*^9, 
  3.511255305922925*^9}, {3.5113201916338367`*^9, 3.5113202770730057`*^9}, {
  3.511320324800376*^9, 3.511320325552327*^9}},
 CellID->1804033555],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "//", "Normal"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.511250217598606*^9, 3.51125023358689*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {
      FractionBox["2", "5"], 
      FractionBox["3", "5"], "0"},
     {"0", 
      FractionBox["4", "9"], 
      FractionBox["5", "9"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5112502274220963`*^9, 3.5112502339915667`*^9}, 
   3.511252933794156*^9, 3.511253373179902*^9, 3.511255246678771*^9, 
   3.5112553075747967`*^9, 3.511257907654819*^9, 3.511260328922769*^9, 
   3.511261238575927*^9, 3.5112811257014723`*^9, 3.5112827248095016`*^9, 
   3.511283082847169*^9, 3.511284316728744*^9, 3.511284578334817*^9, 
   3.5113203275233088`*^9, 3.5113208422438593`*^9, 3.5113210052900953`*^9, 
   3.511328362298553*^9, 3.511328989915098*^9, 3.511334509668569*^9, 
   3.5113445258313217`*^9, 3.511344587058545*^9, 3.5113446290378437`*^9, {
   3.511344691327755*^9, 3.511344761802956*^9}, 3.511344796585897*^9, 
   3.511347342276486*^9, 3.511348976961892*^9, 3.511349026456338*^9, 
   3.511349424395356*^9, 3.511349468608897*^9, 3.511349521772092*^9, {
   3.5113495913414297`*^9, 3.5113496418837347`*^9}, 3.511349674197749*^9, 
   3.511351935155498*^9, 3.511352042295702*^9, 3.514605921056122*^9, 
   3.51460604791494*^9, 3.514606910457003*^9, 3.514621550332548*^9, 
   3.514621844588167*^9, 3.514625116411459*^9, 3.5146251652092648`*^9, {
   3.514628574689185*^9, 3.514628585230101*^9}, 3.51463402195078*^9, 
   3.514690751421701*^9, 3.514693175602358*^9, 3.514698898108274*^9, 
   3.5146989406150923`*^9, 3.514703933282487*^9, 3.515838569458644*^9, 
   3.5168664331211147`*^9, 3.5168770174113483`*^9, 3.517291140977549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", "#", "]"}], "&"}], ",", 
   RowBox[{"JordanDecomposition", "[", "A", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5146215532038603`*^9, 3.5146215617557793`*^9}, {
  3.514621598608529*^9, 3.514621604534354*^9}, {3.514621721531485*^9, 
  3.514621778626133*^9}, {3.514621820397523*^9, 3.5146218208033743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "1"},
       {"0", 
        FractionBox["1", "10"], "1"},
       {"1", "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["5", "9"], "0", "0"},
       {"0", 
        FractionBox["3", "5"], "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.514621604956929*^9, {3.514621724974271*^9, 3.5146217730022383`*^9}, 
   3.514621821204611*^9, 3.51462511671516*^9, 3.514625165500553*^9, {
   3.51462857487045*^9, 3.51462858547692*^9}, 3.514634022372457*^9, 
   3.51469075200675*^9, 3.51469317561382*^9, 3.5146988982365828`*^9, 
   3.514698940725629*^9, 3.514703933290357*^9, 3.515838570019307*^9, 
   3.516866433547819*^9, 3.516877018071567*^9, 3.5172911414828577`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rhs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "n"}]], "[", "z", "]"}], 
      RowBox[{
       SubscriptBox["\[Phi]", "n"], "[", "z", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "L", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rhs", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"rhs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{
     SubscriptBox["S", "0"], "[", "z", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.511255708094071*^9, 3.5112557367042418`*^9}, {
   3.511255783405711*^9, 3.511255802367193*^9}, 3.511260350277404*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DelDDelFs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["DelDDelF", "n"], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.511258498689275*^9, 3.511258507210991*^9}, {
  3.5112588968025084`*^9, 3.5112589006798477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDelDDelFs1", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"DelDDelFs", "==", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"A", ",", "rhs"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511254998608993*^9, 3.511255057123591*^9}, {
   3.511255106598044*^9, 3.5112551113618526`*^9}, {3.5112551527031803`*^9, 
   3.511255213844886*^9}, {3.511255327424749*^9, 3.511255341574107*^9}, 
   3.511255700177907*^9, {3.511255797566963*^9, 3.511255800262518*^9}, {
   3.511255844586472*^9, 3.5112558510141773`*^9}, {3.511256013650725*^9, 
   3.511256017404396*^9}, {3.5112579338848457`*^9, 3.511257993128029*^9}, {
   3.511258031270864*^9, 3.511258069094496*^9}, {3.5112581033623466`*^9, 
   3.5112581079310207`*^9}, {3.5112584113711042`*^9, 
   3.5112584363782463`*^9}, {3.511258483745788*^9, 3.511258527473763*^9}, {
   3.5112589063452463`*^9, 3.511258912651373*^9}, 3.511259061853382*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["DelDDelF", "1"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["DelDDelF", "3"], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]}], "3"], "-", 
     RowBox[{
      FractionBox["2", "3"], " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["5", "3"], " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["DelDDelF", "5"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "15"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", 
        RowBox[{
         SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
       RowBox[{"20", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "+", 
       RowBox[{"27", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.511255058125122*^9, {3.51125509093468*^9, 3.511255113293229*^9}, 
   3.511255342587558*^9, 3.511255803582423*^9, 3.511256027814723*^9, 
   3.511257919168931*^9, 3.511258549505992*^9, 3.511258649276886*^9, 
   3.511258990615631*^9, {3.5112590639056683`*^9, 3.511259077869001*^9}, 
   3.5112603549196043`*^9, 3.5112612424300833`*^9, 3.511281125888926*^9, 
   3.511282724979795*^9, 3.511283083056202*^9, 3.5112843168307962`*^9, 
   3.511284578488242*^9, 3.511320336668146*^9, 3.5113208450163717`*^9, 
   3.511321005399824*^9, 3.511328362407666*^9, 3.511329868878265*^9, 
   3.511334512267736*^9, 3.5113445259425907`*^9, 3.5113445871900873`*^9, 
   3.511344629170315*^9, {3.511344691534409*^9, 3.511344761948475*^9}, 
   3.5113447966933813`*^9, 3.511347347003132*^9, 3.511348977093678*^9, 
   3.511349026557789*^9, 3.511349424501861*^9, 3.511349468846719*^9, 
   3.511349521925322*^9, {3.511349591504561*^9, 3.511349642010335*^9}, 
   3.511349674371636*^9, 3.5113519353062763`*^9, 3.511352042426833*^9, 
   3.5146059212263393`*^9, 3.514606048086824*^9, 3.514606910716061*^9, 
   3.514625117003614*^9, 3.514625165716679*^9, {3.514628575178985*^9, 
   3.514628585731591*^9}, 3.514634022703063*^9, 3.514690752376823*^9, 
   3.5146931757852*^9, 3.514698898355115*^9, 3.514698940897854*^9, 
   3.514703933443719*^9, 3.515838570170682*^9, 3.516866433802498*^9, 
   3.5168770184375687`*^9, 3.517291141672186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDelDDelFs2", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "#", "}"}], ",", "oddPseudoFluxes"}], "]"}], "&"}], ",", 
    "eqnsForDelDDelFs1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511255836950974*^9, 3.511255837763493*^9}, {
   3.511256043119359*^9, 3.5112560438456907`*^9}, {3.5112561501040163`*^9, 
   3.511256153610244*^9}, {3.511256185440885*^9, 3.511256202372899*^9}, {
   3.51125629586084*^9, 3.5112563010687227`*^9}, {3.5112565258042793`*^9, 
   3.5112565614676657`*^9}, {3.511256686470209*^9, 3.5112567294170313`*^9}, {
   3.5112569289834967`*^9, 3.5112569313321753`*^9}, {3.511257004746434*^9, 
   3.511257032874195*^9}, {3.511257803089201*^9, 3.5112578032807627`*^9}, {
   3.5112585621606627`*^9, 3.511258591883244*^9}, {3.511258919594338*^9, 
   3.511258949067378*^9}, 3.511259065989482*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DelDDelF", "1"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DelDDelF", "3"], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SubscriptBox["S", "0"], "[", "z", "]"}]}], "3"], "-", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
       RowBox[{
        FractionBox["5", "3"], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DelDDelF", "5"], "\[Equal]", 
      RowBox[{
       FractionBox["1", "15"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", 
          RowBox[{
           SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
         RowBox[{"20", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "+", 
         RowBox[{"27", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "4"], "[", "z", "]"}], " ", 
          RowBox[{
           SubscriptBox["\[CapitalSigma]", 
            RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511256202775063*^9, {3.51125670433152*^9, 3.5112567307626266`*^9}, 
   3.5112569323331833`*^9, {3.511257008540393*^9, 3.511257035356982*^9}, {
   3.5112585738112993`*^9, 3.511258593475456*^9}, 3.511258652041884*^9, 
   3.511258991967784*^9, {3.5112590664974413`*^9, 3.511259079352483*^9}, 
   3.511260362334816*^9, 3.5112612437833767`*^9, 3.511281126037085*^9, 
   3.511282725163875*^9, 3.511283083217247*^9, 3.511284316839251*^9, 
   3.511284578590622*^9, 3.5113203462090073`*^9, 3.511320845948552*^9, 
   3.511321005413409*^9, 3.511328362525859*^9, 3.511329870169837*^9, 
   3.51133451353032*^9, 3.511344526047748*^9, 3.511344587329158*^9, 
   3.511344629271825*^9, {3.511344691695513*^9, 3.511344762058098*^9}, 
   3.51134479670541*^9, 3.5113473484511013`*^9, 3.5113489771060266`*^9, 
   3.51134902656772*^9, 3.511349424510791*^9, 3.511349468859253*^9, 
   3.51134952215024*^9, {3.511349591637299*^9, 3.5113496421362543`*^9}, 
   3.511349674394599*^9, 3.51135193547475*^9, 3.511352042464703*^9, 
   3.514605921235221*^9, 3.514606048295409*^9, 3.514606910951232*^9, 
   3.5146251172978277`*^9, 3.514625166012822*^9, {3.514628575348784*^9, 
   3.514628585940775*^9}, 3.514634023002919*^9, 3.514690752519121*^9, 
   3.514693175912962*^9, 3.514698898367498*^9, 3.514698941014676*^9, 
   3.514703933567432*^9, 3.51583857028512*^9, 3.5168664338120337`*^9, 
   3.51687701857905*^9, 3.517291141852045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDelDDelFs3", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Eliminate", "[", 
      RowBox[{"#", ",", "evenmom"}], "]"}], "&"}], ",", "eqnsForDelDDelFs2"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5112568519405117`*^9, 3.511256945845723*^9}, {
  3.511256976608107*^9, 3.511256977434997*^9}, {3.511257132027821*^9, 
  3.511257138890379*^9}, {3.511258582874502*^9, 3.511258607275258*^9}, {
  3.511258952754401*^9, 3.5112589604805326`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"15", " ", 
      SubscriptBox["DelDDelF", "1"]}], "+", 
     RowBox[{"15", " ", 
      RowBox[{
       SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
     RowBox[{"10", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{"15", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "45"}], " ", 
      SubscriptBox["DelDDelF", "3"]}], "+", 
     RowBox[{"30", " ", 
      RowBox[{
       SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
     RowBox[{"20", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"16", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{"25", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"20", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{"30", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"225", " ", 
      SubscriptBox["DelDDelF", "5"]}], "+", 
     RowBox[{"120", " ", 
      RowBox[{
       SubscriptBox["S", "0"], "[", "z", "]"}]}], "+", 
     RowBox[{"80", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"64", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{"100", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"80", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{"81", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{"120", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.511256949306364*^9, 3.511256978460002*^9}, 
   3.511257017461409*^9, 3.5112570886824427`*^9, 3.511257140855796*^9, 
   3.511258608345645*^9, 3.5112586548080063`*^9, 3.511258993234714*^9, 
   3.51126036375667*^9, 3.51126124559107*^9, 3.5112811261840887`*^9, 
   3.511282725325055*^9, 3.511283083440564*^9, 3.511284316929694*^9, 
   3.511284578739861*^9, 3.5113203480618267`*^9, 3.5113208471002913`*^9, 
   3.5113210055755453`*^9, 3.5113283626503*^9, 3.5113298714675922`*^9, 
   3.5113345180065947`*^9, 3.5113445262079887`*^9, 3.511344587601842*^9, 
   3.51134462942912*^9, {3.511344691863475*^9, 3.511344762205937*^9}, 
   3.511344796718541*^9, 3.511347349683877*^9, 3.511348037862809*^9, 
   3.511348669877203*^9, 3.511348977207019*^9, 3.511349026577281*^9, 
   3.51134942459479*^9, 3.511349468989699*^9, 3.5113495223029957`*^9, {
   3.5113495918113823`*^9, 3.511349642336059*^9}, 3.511349674543429*^9, 
   3.511351935748698*^9, 3.511352042840279*^9, 3.514605921393607*^9, 
   3.514606048482732*^9, 3.514606911201363*^9, 3.5146251179086447`*^9, 
   3.514625166563764*^9, {3.514628575372713*^9, 3.51462858620163*^9}, 
   3.514634023305419*^9, 3.514690752795491*^9, 3.514693176034453*^9, 
   3.514698898514326*^9, 3.51469894102991*^9, 3.514703933695635*^9, 
   3.5158385706665916`*^9, 3.516866433912108*^9, 3.5168770187680893`*^9, 
   3.517291142135206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coefAtDs", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"Coefficient", "[", 
    RowBox[{
     RowBox[{"eqnsForDelDDelFs3", "/.", 
      RowBox[{"Equal", "\[Rule]", "Plus"}]}], ",", "DelDDelFs"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5113477182397823`*^9, 3.511347730790062*^9}, {
  3.511347761163702*^9, 3.5113479749499893`*^9}, {3.511348098166581*^9, 
  3.511348107060462*^9}, {3.511348178139757*^9, 3.511348199722951*^9}, {
  3.5113491068766603`*^9, 3.5113491653331757`*^9}, {3.511349405017314*^9, 
  3.5113494146027718`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", 
   RowBox[{"-", "45"}], ",", "225"}], "}"}]], "Output",
 CellChangeTimes->{
  3.511347733947207*^9, 3.511347765293872*^9, {3.511347897053425*^9, 
   3.511347914266556*^9}, {3.5113479614504147`*^9, 3.511347975444992*^9}, 
   3.511348108255499*^9, {3.5113481802483873`*^9, 3.511348200689169*^9}, 
   3.511348977320208*^9, 3.5113490265879793`*^9, {3.511349415000238*^9, 
   3.511349424605447*^9}, 3.511349469120593*^9, 3.511349522549636*^9, {
   3.511349591945812*^9, 3.511349642493568*^9}, 3.511349674680738*^9, 
   3.511351935882544*^9, 3.5113520429977417`*^9, 3.514605921666121*^9, 
   3.514606048494054*^9, 3.514606911413781*^9, 3.514625117964913*^9, 
   3.514625166613052*^9, {3.514628575554215*^9, 3.514628586426448*^9}, 
   3.514634023330503*^9, 3.5146907530731173`*^9, 3.514693176145726*^9, 
   3.514698898523727*^9, 3.514698941038329*^9, 3.514703933710747*^9, 
   3.515838570795266*^9, 3.516866434037956*^9, 3.5168770188934183`*^9, 
   3.517291142143659*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDelDDelFs4", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"eqnsForDelDDelFs3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", "coefAtDs"}], "]"}], 
     "]"}], "==", 
    RowBox[{"Thread", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"eqnsForDelDDelFs3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "coefAtDs"}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5113482452216*^9, 3.51134835164624*^9}, {
  3.511348385405157*^9, 3.5113483865785923`*^9}, {3.5113484925556192`*^9, 
  3.511348617392295*^9}, {3.511348648290744*^9, 3.5113487088180943`*^9}, {
  3.511348742466329*^9, 3.511348895941895*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["DelDDelF", "1"], "+", 
     RowBox[{
      SubscriptBox["S", "0"], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox["2", "3"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["8", "15"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["DelDDelF", "3"], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]}], "3"], "-", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["5", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "3"]}], " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["DelDDelF", "5"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]}], "15"], "+", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["64", "225"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["9", "25"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.511348264244652*^9, 3.511348340155307*^9}, 
   3.5113483871541758`*^9, {3.511348585347047*^9, 3.511348594364503*^9}, 
   3.5113486565471563`*^9, 3.5113487530403423`*^9, {3.511348783557575*^9, 
   3.5113488489058323`*^9}, {3.511348880131424*^9, 3.5113488972878304`*^9}, 
   3.511348977540156*^9, 3.511349026824422*^9, 3.511349424627351*^9, 
   3.511349469488412*^9, 3.5113495228825502`*^9, {3.511349592377324*^9, 
   3.511349642712862*^9}, 3.511349674951354*^9, 3.511351936357373*^9, 
   3.51135204316261*^9, 3.514605922113359*^9, 3.514606048501598*^9, 
   3.514606911620734*^9, 3.514625118209804*^9, 3.514625166857847*^9, {
   3.514628575802927*^9, 3.5146285866177197`*^9}, 3.514634023356756*^9, 
   3.514690753244109*^9, 3.5146931763001204`*^9, 3.514698898534815*^9, 
   3.514698941046257*^9, 3.514703933725197*^9, 3.515838570833776*^9, 
   3.516866434047542*^9, 3.5168770190611362`*^9, 3.517291142151037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDelDDelFs5", "=", 
  RowBox[{"eqnsForDelDDelFs4", "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"DelDDelFs", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["DelDDel", "n"], "[", "z", "]"}], 
        RowBox[{
         SubscriptBox["F", "n"], "[", "z", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.511259035618959*^9, 3.51125904616938*^9}, {
  3.511259090134645*^9, 3.5112591044049797`*^9}, {3.5112591435785227`*^9, 
  3.511259215870421*^9}, {3.511259330953957*^9, 3.511259415445286*^9}, {
  3.511259448408051*^9, 3.511259575759982*^9}, {3.511259624177058*^9, 
  3.511259627210476*^9}, {3.5112597528430843`*^9, 3.511259771715252*^9}, {
  3.5112598707649193`*^9, 3.511259899333455*^9}, {3.511348900319165*^9, 
  3.51134890245089*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["DelDDel", "1"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], "+", 
     RowBox[{
      SubscriptBox["S", "0"], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox["2", "3"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["8", "15"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["DelDDel", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]}], "3"], "-", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["5", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "3"]}], " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["DelDDel", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]}], "15"], "+", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["64", "225"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
     RowBox[{
      FractionBox["4", "9"], " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["16", "45"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
     RowBox[{
      FractionBox["9", "25"], " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511259174181181*^9, 3.5112595080355*^9, 3.511259577923647*^9, 
   3.511259629088826*^9, 3.511259773009585*^9, {3.511259885462484*^9, 
   3.511259899849276*^9}, 3.5112603653745728`*^9, 3.511261247186614*^9, 
   3.511281126195383*^9, 3.511282725346706*^9, 3.511283083629664*^9, 
   3.511284316944735*^9, 3.511284578876296*^9, 3.511320355618993*^9, 
   3.511320848108897*^9, 3.511321005670329*^9, 3.511328362785823*^9, 
   3.5113298728720903`*^9, 3.5113345225157537`*^9, 3.511344526359933*^9, 
   3.511344587792223*^9, 3.511344629572257*^9, {3.511344692696465*^9, 
   3.511344762500842*^9}, 3.511344796802004*^9, 3.5113473508711777`*^9, 
   3.511348905042684*^9, 3.5113489776509027`*^9, 3.511349026910054*^9, 
   3.511349424634109*^9, 3.511349469822399*^9, 3.5113495229073153`*^9, {
   3.511349592795239*^9, 3.511349642836684*^9}, 3.51134967499968*^9, 
   3.511351936537758*^9, 3.5113520432392683`*^9, 3.5146059222639723`*^9, 
   3.5146060487296877`*^9, 3.514606911826345*^9, 3.514625118581016*^9, 
   3.514625167183814*^9, {3.514628575978652*^9, 3.514628586855382*^9}, 
   3.514634023405986*^9, 3.5146907533952208`*^9, 3.51469317642054*^9, 
   3.514698898545933*^9, 3.5146989410555077`*^9, 3.514703933873211*^9, 
   3.5158385708430843`*^9, 3.516866434057393*^9, 3.516877019071801*^9, 
   3.517291142161561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"b", ",", "m"}], "}"}], "=", 
  RowBox[{"CoefficientArrays", "[", 
   RowBox[{"eqnsForDelDDelFs5", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "n"], "[", "z", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.511258737105991*^9, 3.5112587472782707`*^9}, {
   3.511259591053022*^9, 3.511259658073683*^9}, {3.51125969281116*^9, 
   3.511259715330944*^9}, {3.511259797401042*^9, 3.511259814835762*^9}, {
   3.5113474508464193`*^9, 3.51134745185634*^9}, 3.5113489170930433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"SparseArray", "[", 
     RowBox[{
      InterpretationBox[
       RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "3", 
        "\[InvisibleSpace]", "\<\">\"\>"}],
       SequenceForm["<", 3, ">"],
       Editable->False], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}],
    False,
    Editable->False], ",", 
   TagBox[
    RowBox[{"SparseArray", "[", 
     RowBox[{
      InterpretationBox[
       RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "9", 
        "\[InvisibleSpace]", "\<\">\"\>"}],
       SequenceForm["<", 9, ">"],
       Editable->False], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}]}], "]"}],
    False,
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.5112597033518047`*^9, 3.511259716311015*^9}, {
   3.5112597781211023`*^9, 3.511259815448408*^9}, {3.511259887150387*^9, 
   3.511259901292211*^9}, 3.511260366715398*^9, 3.511261249404681*^9, 
   3.511281126344145*^9, 3.511282725356183*^9, 3.5112830837989607`*^9, 
   3.5112843169526463`*^9, 3.5112845788876543`*^9, 3.511320357294433*^9, 
   3.5113208487591953`*^9, 3.511321005771069*^9, 3.511328362906081*^9, 
   3.511329874279667*^9, 3.511334524109851*^9, 3.5113445263841763`*^9, 
   3.511344587927387*^9, 3.5113446296824923`*^9, {3.511344693524395*^9, 
   3.5113447626186047`*^9}, 3.5113447969256773`*^9, 3.5113489179477654`*^9, 
   3.511348977725268*^9, 3.511349027127084*^9, 3.511349424725547*^9, 
   3.5113494699771748`*^9, 3.511349522922008*^9, {3.511349593183468*^9, 
   3.511349642860978*^9}, 3.5113496750280323`*^9, 3.511351937679371*^9, 
   3.5113520432875443`*^9, 3.5146059224444637`*^9, 3.514606048955904*^9, 
   3.514606912029667*^9, 3.514625118878252*^9, 3.5146251674822683`*^9, {
   3.5146285761714287`*^9, 3.514628587059538*^9}, 3.5146340236687603`*^9, 
   3.514690753564323*^9, 3.514693176429606*^9, 3.5146988986956987`*^9, 
   3.5146989411864843`*^9, 3.514703934012504*^9, 3.515838570951714*^9, 
   3.516866434217123*^9, 3.516877019216104*^9, 3.517291142267887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", "b", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.51125981842404*^9, 3.51125984237097*^9}, 
   3.511259954773552*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox["2", "3"]}], " ", 
        RowBox[{
         SubscriptBox["S", "0"], "[", "z", "]"}]}]},
      {
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{
          SubscriptBox["S", "0"], "[", "z", "]"}]}], "15"]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.511259821955246*^9, 3.511259842755658*^9}, 
   3.511259955139689*^9, 3.5112603677910957`*^9, 3.511261250636334*^9, 
   3.511281126353673*^9, 3.511282725362067*^9, 3.5112830838069773`*^9, 
   3.511284316958815*^9, 3.511284579034874*^9, 3.511320358876247*^9, 
   3.511320849653413*^9, 3.511321005878559*^9, 3.511328363018414*^9, 
   3.511329875401675*^9, 3.511334525233371*^9, 3.511344526396091*^9, 
   3.5113445880190783`*^9, 3.511344629693964*^9, {3.5113446937355213`*^9, 
   3.511344762724956*^9}, 3.5113447970039787`*^9, 3.51134891941285*^9, 
   3.5113489777361517`*^9, 3.51134902729774*^9, 3.511349424839197*^9, 
   3.511349470108363*^9, 3.5113495229335546`*^9, {3.5113495935096188`*^9, 
   3.511349642874797*^9}, 3.511349675147812*^9, 3.5113519388580523`*^9, 
   3.511352043408429*^9, 3.514605922754945*^9, 3.514606049213255*^9, 
   3.514606912040442*^9, 3.514625119511286*^9, 3.514625167706017*^9, {
   3.51462857638503*^9, 3.5146285873587847`*^9}, 3.514634023946492*^9, 
   3.5146345870421333`*^9, 3.514690753701191*^9, 3.514693176557234*^9, 
   3.5146988987032623`*^9, 3.5146989411948853`*^9, 3.5147039340246067`*^9, 
   3.515838571079226*^9, 3.516866434225532*^9, 3.516877019478365*^9, 
   3.517291142310081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", "m", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{3.511260034546486*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        SubscriptBox["DelDDel", "1"], "[", "z", "]"}], "-", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "15"]}], " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}]},
     {
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["DelDDel", "3"], "[", "z", "]"}], "-", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
       RowBox[{
        FractionBox["5", "9"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], 
      RowBox[{
       RowBox[{
        FractionBox["16", "45"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["8", "15"]}], " ", 
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], 
      RowBox[{
       RowBox[{
        FractionBox["16", "45"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "+", 
       RowBox[{
        FractionBox["4", "9"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["DelDDel", "5"], "[", "z", "]"}], "-", 
       RowBox[{
        FractionBox["64", "225"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "0"}]], "[", "z", "]"}]}], "-", 
       RowBox[{
        FractionBox["16", "45"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "2"}]], "[", "z", "]"}]}], "-", 
       RowBox[{
        FractionBox["9", "25"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", 
          RowBox[{"a", ",", "4"}]], "[", "z", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.511260035306838*^9, 3.511260369552397*^9, 3.5112612521979847`*^9, 
   3.511281126360095*^9, 3.5112827255276527`*^9, 3.511283083816065*^9, 
   3.511284317044096*^9, 3.511284579045423*^9, 3.511320365318866*^9, 
   3.511320850764852*^9, 3.511321005983314*^9, 3.5113283631129827`*^9, 
   3.511329877143528*^9, 3.511334526768386*^9, 3.5113445265192842`*^9, 
   3.5113445881383*^9, 3.5113446298082848`*^9, {3.511344693755314*^9, 
   3.5113447628242693`*^9}, 3.511344797105599*^9, 3.511348921058261*^9, 
   3.5113489778600492`*^9, 3.511349027388892*^9, 3.5113494248706427`*^9, 
   3.51134947027989*^9, 3.5113495233033867`*^9, {3.511349593887451*^9, 
   3.511349642896594*^9}, 3.511349675271508*^9, 3.511351939586753*^9, 
   3.511352043577716*^9, 3.514605923320856*^9, 3.514606049223969*^9, 
   3.514606912241795*^9, 3.514625119887697*^9, 3.5146251679746943`*^9, {
   3.514628576717618*^9, 3.514628587606674*^9}, 3.514634024197061*^9, 
   3.514690753833675*^9, 3.514693176567388*^9, 3.514698898711219*^9, 
   3.514698941202578*^9, 3.514703934035864*^9, 3.51583857121146*^9, 
   3.5168664342354193`*^9, 3.516877019492196*^9, 3.517291142327518*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "A_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"A", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["DelDDel", "n_"], "[", "z", "]"}], "\[Rule]", 
       SubscriptBox["DelDDel", "n"]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalSigma]", 
         RowBox[{"a", ",", "n__"}]], "[", "z", "]"}], "\[Rule]", 
       SubscriptBox["\[CapitalSigma]", "n"]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["S", "0"], "[", "z", "]"}], "\[Rule]", 
       SubscriptBox["S", "0"]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.517290988044703*^9, 3.517290993189035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "[", 
  RowBox[{
   RowBox[{"Normal", "[", "m", "]"}], "//", "MatrixForm"}], "]"}]], "Input",
 CellChangeTimes->{{3.5113444389977283`*^9, 3.511344441261333*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SubscriptBox["DelDDel", "1"], "-", 
        SubscriptBox["\[CapitalSigma]", "0"]}], 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalSigma]", "0"]}], "3"], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"8", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "15"]}]},
      {
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["\[CapitalSigma]", "0"]}], "3"], 
       RowBox[{
        SubscriptBox["DelDDel", "3"], "-", 
        FractionBox[
         RowBox[{"4", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "9"], "-", 
        FractionBox[
         RowBox[{"5", " ", 
          SubscriptBox["\[CapitalSigma]", "2"]}], "9"]}], 
       RowBox[{
        FractionBox[
         RowBox[{"16", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "45"], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SubscriptBox["\[CapitalSigma]", "2"]}], "9"]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"8", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "15"]}], 
       RowBox[{
        FractionBox[
         RowBox[{"16", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "45"], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SubscriptBox["\[CapitalSigma]", "2"]}], "9"]}], 
       RowBox[{
        SubscriptBox["DelDDel", "5"], "-", 
        FractionBox[
         RowBox[{"64", " ", 
          SubscriptBox["\[CapitalSigma]", "0"]}], "225"], "-", 
        FractionBox[
         RowBox[{"16", " ", 
          SubscriptBox["\[CapitalSigma]", "2"]}], "45"], "-", 
        FractionBox[
         RowBox[{"9", " ", 
          SubscriptBox["\[CapitalSigma]", "4"]}], "25"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.511344442033071*^9, 3.511344526874943*^9, 3.511344588523656*^9, 
   3.511344630079851*^9, {3.5113446941258183`*^9, 3.51134476296747*^9}, 
   3.511344797135845*^9, 3.5113489779708776`*^9, 3.511349027609398*^9, 
   3.511349424890786*^9, 3.511349470542262*^9, 3.511349523488594*^9, {
   3.511349594386977*^9, 3.511349643056307*^9}, 3.511349675499173*^9, 
   3.511351940182962*^9, 3.5113520442001457`*^9, 3.514605923467593*^9, 
   3.514606049418695*^9, 3.5146069129313383`*^9, 3.514625120998188*^9, 
   3.514625168844433*^9, {3.5146285769505453`*^9, 3.5146285879277363`*^9}, 
   3.514634024785696*^9, 3.514690754096088*^9, 3.514693176707671*^9, 
   3.514698898890831*^9, 3.514698941310753*^9, 3.514703934237605*^9, 
   3.5158385715029383`*^9, 3.516866434363346*^9, 3.516877019736568*^9, 
   3.517291142440591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"m", "-", 
   RowBox[{"Transpose", "[", "m", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5146259430374737`*^9, 3.514625954201454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.514625946492157*^9, 3.514625956547861*^9}, {
   3.514628577143887*^9, 3.51462858819038*^9}, 3.514634025134807*^9, 
   3.5146907544228086`*^9, 3.514693176858089*^9, 3.5146988988996058`*^9, 
   3.514698941324685*^9, 3.514703934390081*^9, 3.5158385716409903`*^9, 
   3.516866434512952*^9, 3.516877019869246*^9, 3.517291142583232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["j", "+"], "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"LegendreP", "[", 
        RowBox[{"n", ",", "\[Mu]"}], "]"}], 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"\[Mu]", ",", "L"}], "]"}], 
       RowBox[{"\[DifferentialD]", "\[Mu]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}], "/.", 
   RowBox[{"oddWrtEven", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.458122525609375*^9, 3.45812255378125*^9}, {
   3.458122593*^9, 3.45812261184375*^9}, {3.458123482421875*^9, 
   3.458123484734375*^9}, 3.4581238911875*^9, {3.458124040421875*^9, 
   3.458124091015625*^9}, {3.4581317025625*^9, 3.458131705453125*^9}, {
   3.458131738421875*^9, 3.45813178303125*^9}, {3.458131819984375*^9, 
   3.45813182178125*^9}, {3.458147883921875*^9, 3.458147887890625*^9}, {
   3.458273583375*^9, 3.4582735851875*^9}, {3.45827362234375*^9, 
   3.45827371415625*^9}, {3.458273783828125*^9, 3.458273793015625*^9}, {
   3.511185538708654*^9, 3.5111855649085693`*^9}, {3.5111859027267027`*^9, 
   3.511185903332201*^9}, {3.511195158064402*^9, 3.511195161035399*^9}, 
   3.51126265900174*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "Q"}], " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
      RowBox[{"2", " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], 
     RowBox[{"6", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "16"]}], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
    FractionBox[
     RowBox[{"81", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
      RowBox[{"4", " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], 
     RowBox[{"14", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
    FractionBox[
     RowBox[{"25", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
    FractionBox[
     RowBox[{"81", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"], "-", 
    FractionBox[
     RowBox[{"5", " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], 
     RowBox[{"22", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511262665946877*^9, 3.511281127601899*^9, 3.511282728040801*^9, 
   3.511283090899172*^9, 3.511284319333428*^9, 3.511284585819147*^9, {
   3.5113203867809067`*^9, 3.511320403932396*^9}, 3.5113210150550747`*^9, 
   3.511328376182768*^9, 3.511344545199922*^9, 3.511344612939435*^9, 
   3.5113446435085278`*^9, {3.5113447034275513`*^9, 3.511344763861704*^9}, 
   3.511344797259087*^9, 3.511348978509066*^9, 3.5113490276890497`*^9, 
   3.511349424983109*^9, 3.5113494731337423`*^9, 3.511349530764847*^9, 
   3.511349596927001*^9, {3.5113496294285517`*^9, 3.511349656880184*^9}, 
   3.511349694355073*^9, 3.511351964868936*^9, 3.5113520753330107`*^9, 
   3.514605924942647*^9, 3.514606052376569*^9, 3.514606922049477*^9, 
   3.5146251560456133`*^9, 3.5146252074492617`*^9, {3.514628579975155*^9, 
   3.5146285978392878`*^9}, 3.5146340441550837`*^9, 3.514690764316*^9, 
   3.5146931774800653`*^9, 3.514698901417754*^9, 3.514698941814851*^9, 
   3.5147039369443808`*^9, 3.515838575112629*^9, 3.51686643685865*^9, 
   3.516877021488017*^9, 3.517291146167202*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DDelFs", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SubscriptBox["DDelF", "n"], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511262777839286*^9, 3.5112627895613003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["DDelF", "1"], ",", 
   SubscriptBox["DDelF", "3"], ",", 
   SubscriptBox["DDelF", "5"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511262790623391*^9, 3.5112811278751574`*^9, 3.51128272821194*^9, 
   3.511283091191635*^9, 3.511284319930212*^9, 3.511284585943337*^9, 
   3.5113204071545887`*^9, 3.5113210153432703`*^9, 3.5113283763208313`*^9, 
   3.5113445454467287`*^9, 3.511344613110078*^9, 3.5113446437404833`*^9, {
   3.5113447035980387`*^9, 3.511344764144949*^9}, 3.511344797472406*^9, 
   3.511348978738014*^9, 3.5113490279271793`*^9, 3.5113494249957952`*^9, 
   3.5113494733185587`*^9, 3.511349530929842*^9, 3.511349597107678*^9, {
   3.511349629738151*^9, 3.5113496571565447`*^9}, 3.511349694736973*^9, 
   3.511351965478799*^9, 3.5113520755656776`*^9, 3.514605925449902*^9, 
   3.514606052583251*^9, 3.514606923306223*^9, 3.514625207976737*^9, {
   3.514628580199856*^9, 3.514628598132649*^9}, 3.514634044602417*^9, 
   3.514690764890649*^9, 3.51469317765*^9, 3.514698901587715*^9, 
   3.514698941972145*^9, 3.514703937839835*^9, 3.5158385755445433`*^9, 
   3.516866437106439*^9, 3.516877021852686*^9, 3.517291146816155*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDDelFs1", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"DDelFs", "\[Equal]", 
    RowBox[{"2", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "1"}]}], "]"}], "&"}], ",", 
       SuperscriptBox["j", "+"]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511261750101595*^9, 3.5112617538996468`*^9}, {
   3.5112618744924583`*^9, 3.5112619147458878`*^9}, {3.511261985119388*^9, 
   3.5112619887903*^9}, {3.5112621579118977`*^9, 3.5112622073416348`*^9}, {
   3.511262237636718*^9, 3.511262242316352*^9}, 3.511262527515675*^9, {
   3.511281869745502*^9, 3.511281877033084*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["DDelF", "1"], "\[Equal]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
       FractionBox[
        RowBox[{"5", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"]}], ")"}]}]}], 
   ",", 
   RowBox[{
    SubscriptBox["DDelF", "3"], "\[Equal]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "16"]}], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
       FractionBox[
        RowBox[{"5", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
       FractionBox[
        RowBox[{"81", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], ")"}]}]}],
    ",", 
   RowBox[{
    SubscriptBox["DDelF", "5"], "\[Equal]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
       FractionBox[
        RowBox[{"25", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
       FractionBox[
        RowBox[{"81", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511261756131152*^9, 3.511261882922288*^9, 3.511261996513235*^9, 
   3.511262049121611*^9, {3.511262226771607*^9, 3.5112622435497293`*^9}, 
   3.511262531766953*^9, 3.511281127881072*^9, 3.511281879178256*^9, 
   3.5112827285318727`*^9, 3.511283091201344*^9, 3.511284320247488*^9, 
   3.511284585955923*^9, 3.5113204083864813`*^9, 3.511321015574486*^9, 
   3.51132837633181*^9, 3.511344545643651*^9, 3.5113446131268187`*^9, 
   3.511344643932763*^9, {3.5113447038347797`*^9, 3.511344764272586*^9}, 
   3.511344797849351*^9, 3.511348978881381*^9, 3.511349028111999*^9, 
   3.5113494250983353`*^9, 3.511349473458953*^9, 3.511349530939987*^9, 
   3.5113495972670937`*^9, {3.511349630342383*^9, 3.511349657168597*^9}, 
   3.5113496947496643`*^9, 3.511351965800069*^9, 3.511352075783883*^9, 
   3.5146059254587708`*^9, 3.514606052593346*^9, 3.514606924075117*^9, 
   3.5146252084390583`*^9, {3.514628580394269*^9, 3.514628598436922*^9}, 
   3.514634045024393*^9, 3.514690764911515*^9, 3.514693177964922*^9, 
   3.514698901600233*^9, 3.5146989424028873`*^9, 3.514703938029173*^9, 
   3.515838575753682*^9, 3.516866437388204*^9, 3.516877021951936*^9, 
   3.5172911469987392`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDDelFs2", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "#", "}"}], ",", "oddPseudoFluxes"}], "]"}], "&"}], ",", 
    "eqnsForDDelFs1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511261543942474*^9, 3.511261594947771*^9}, {
  3.511261643702834*^9, 3.511261678059739*^9}, {3.511262259745359*^9, 
  3.511262263693705*^9}, {3.5112624296346197`*^9, 3.511262447337812*^9}, {
  3.511262482023842*^9, 3.51126253026333*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "1"], "\[Equal]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
         FractionBox[
          RowBox[{"5", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "3"], "\[Equal]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "16"]}], " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
         FractionBox[
          RowBox[{"5", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
         FractionBox[
          RowBox[{"81", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "5"], "\[Equal]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
         FractionBox[
          RowBox[{"25", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
         FractionBox[
          RowBox[{"81", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.45812256903125*^9, 3.458122613765625*^9}, 
   3.458123486*^9, 3.458123634359375*^9, 3.45812384940625*^9, {
   3.45812402071875*^9, 3.458124093*^9}, {3.458131707046875*^9, 
   3.458131752546875*^9}, 3.45813182203125*^9, 3.458147788703125*^9, 
   3.4581478949375*^9, {3.4582735904375*^9, 3.45827366175*^9}, {
   3.458273694515625*^9, 3.458273714796875*^9}, 3.458273797421875*^9, 
   3.5111855723225946`*^9, 3.511185906889842*^9, 3.511186052900249*^9, {
   3.511186521583198*^9, 3.5111865337661247`*^9}, 3.511194080447362*^9, 
   3.5111951305466003`*^9, 3.511195162021228*^9, 3.5112612691346416`*^9, 
   3.511261738999922*^9, 3.5112622747270403`*^9, 3.511262450176302*^9, {
   3.511262485474669*^9, 3.511262498796206*^9}, 3.511262533579795*^9, 
   3.511281127887411*^9, 3.51128188342445*^9, 3.5112827286853523`*^9, 
   3.511283091213615*^9, 3.511284320621291*^9, 3.511284586046138*^9, 
   3.511320409915991*^9, 3.5113210158375797`*^9, 3.511328376480913*^9, 
   3.511344545902569*^9, 3.5113446131525593`*^9, 3.511344643953884*^9, {
   3.5113447040303926`*^9, 3.511344764545598*^9}, 3.511344798118438*^9, 
   3.511348978891548*^9, 3.511349028213332*^9, 3.511349425115138*^9, 
   3.51134947360157*^9, 3.5113495309544163`*^9, 3.511349597420158*^9, {
   3.511349630357335*^9, 3.511349657360094*^9}, 3.511349694773467*^9, 
   3.511351966352247*^9, 3.511352076094749*^9, 3.514605925468213*^9, 
   3.51460605281745*^9, 3.5146069244027443`*^9, 3.514625208904777*^9, {
   3.5146285805766697`*^9, 3.514628598454587*^9}, 3.51463404505196*^9, 
   3.514690764927796*^9, 3.5146931782517242`*^9, 3.514698901613628*^9, 
   3.514698942711035*^9, 3.514703938542069*^9, 3.515838575988328*^9, 
   3.516866437554676*^9, 3.516877021958735*^9, 3.5172911474347143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Eliminate", "[", 
     RowBox[{"#", ",", "evenmom"}], "]"}], "&"}], ",", "eqnsForDDelFs2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.511262534725312*^9, 3.511262574752665*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"16", " ", 
      SubscriptBox["DDelF", "1"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
     RowBox[{
      SubscriptBox["F", "5"], "[", "z", "]"}]}], "\[Equal]", 
    RowBox[{"8", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "384"}], " ", 
      SubscriptBox["DDelF", "3"]}], "+", 
     RowBox[{"112", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
     RowBox[{"41", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{"48", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"1920", " ", 
      SubscriptBox["DDelF", "5"]}], "+", 
     RowBox[{"205", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
     RowBox[{"407", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "\[Equal]", 
    RowBox[{"120", " ", 
     RowBox[{
      SubscriptBox["F", "1"], "[", "z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511262575180332*^9, 3.511281127998115*^9, 3.511281885000415*^9, 
   3.511282729026327*^9, 3.511283091482541*^9, 3.511284320880443*^9, 
   3.511284586169249*^9, 3.5113204170035667`*^9, 3.511321016046752*^9, 
   3.511328376669859*^9, 3.5113445461792316`*^9, 3.511344613284195*^9, 
   3.511344644168784*^9, {3.511344704260521*^9, 3.511344764693466*^9}, 
   3.5113447982451353`*^9, 3.511348978909902*^9, 3.5113490282250853`*^9, 
   3.511349425128669*^9, 3.511349473915865*^9, 3.511349531138207*^9, 
   3.511349597685651*^9, {3.511349630540534*^9, 3.5113496575768538`*^9}, 
   3.511349695021865*^9, 3.511351966943372*^9, 3.511352076375186*^9, 
   3.514605925636079*^9, 3.5146060529831247`*^9, 3.514606924759197*^9, 
   3.514625209415254*^9, {3.514628581077784*^9, 3.514628598846356*^9}, 
   3.514634045516055*^9, 3.514690765178905*^9, 3.514693178407895*^9, 
   3.514698901730082*^9, 3.514698942898426*^9, 3.514703938711026*^9, 
   3.5158385761688433`*^9, 3.516866437696947*^9, 3.516877022053163*^9, 
   3.517291147994611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["j", "-"], "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "1"}], "0"], 
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Abs", "[", "\[Mu]", "]"}]}], "]"}], 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"\[Mu]", ",", "L"}], "]"}], 
        RowBox[{"\[DifferentialD]", "\[Mu]"}]}]}], "//", "Distribute"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "L", ",", "2"}], "}"}]}], "]"}], "/.", 
   RowBox[{"oddWrtEven", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.458273780828125*^9, 3.458273804234375*^9}, {
  3.5111856210726757`*^9, 3.511185679603166*^9}, {3.511185912106906*^9, 
  3.511185912202156*^9}, {3.511262703102982*^9, 3.511262707689557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "Q"}], " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
      RowBox[{"2", " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], 
     RowBox[{"6", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "16"]}], " ", 
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
    FractionBox[
     RowBox[{"81", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
      RowBox[{"4", " ", "Q", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], 
     RowBox[{"14", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
    FractionBox[
     RowBox[{"25", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
    FractionBox[
     RowBox[{"81", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"], "+", 
    FractionBox[
     RowBox[{"5", " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], 
     RowBox[{"22", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4582737170625*^9, 3.4582738075625*^9, {3.511185648840229*^9, 
   3.5111856803251057`*^9}, 3.511185913306831*^9, {3.511186525384506*^9, 
   3.5111865379376993`*^9}, 3.5111940995018578`*^9, 3.511195132315166*^9, 
   3.511262709954669*^9, 3.511281128296826*^9, 3.511282730341795*^9, 
   3.511283095661525*^9, 3.511284322335129*^9, 3.511284590012968*^9, 
   3.511320446402361*^9, 3.5113210207145557`*^9, 3.511328385711114*^9, 
   3.511344556105608*^9, {3.511344627555153*^9, 3.5113446533568583`*^9}, {
   3.5113447088653603`*^9, 3.511344764933443*^9}, 3.51134479840095*^9, 
   3.5113489790358543`*^9, 3.511349028303507*^9, 3.5113494252336082`*^9, 
   3.511349475308469*^9, 3.511349535552981*^9, 3.511349599324492*^9, 
   3.511349635351159*^9, 3.511349666890174*^9, 3.511349704849605*^9, 
   3.511351981478401*^9, 3.511352080316119*^9, 3.514605926065446*^9, 
   3.514606054488975*^9, 3.514606929645419*^9, 3.514625229977188*^9, {
   3.514628582746619*^9, 3.5146286034382544`*^9}, 3.5146340559268703`*^9, 
   3.5146907699534616`*^9, 3.514693178814171*^9, 3.514698903140679*^9, 
   3.5146989432409773`*^9, 3.5147039402250557`*^9, 3.515838577875226*^9, 
   3.5168664380781918`*^9, 3.516877022436406*^9, 3.517291149523744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDDelFs1", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"DDelFs", "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "1"}]}], "]"}], "&"}], ",", 
       SuperscriptBox["j", "-"]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511261750101595*^9, 3.5112617538996468`*^9}, {
   3.5112618744924583`*^9, 3.5112619147458878`*^9}, {3.511261985119388*^9, 
   3.5112619887903*^9}, {3.5112621579118977`*^9, 3.5112622073416348`*^9}, {
   3.511262237636718*^9, 3.511262242316352*^9}, 3.511262527515675*^9, 
   3.511262803246293*^9, 3.51126283838869*^9, {3.511281897974084*^9, 
   3.511281906669561*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["DDelF", "1"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
       FractionBox[
        RowBox[{"5", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"]}], ")"}]}]}], 
   ",", 
   RowBox[{
    SubscriptBox["DDelF", "3"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "16"]}], " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
       FractionBox[
        RowBox[{"5", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
       FractionBox[
        RowBox[{"81", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], ")"}]}]}],
    ",", 
   RowBox[{
    SubscriptBox["DDelF", "5"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
       FractionBox[
        RowBox[{"25", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
       FractionBox[
        RowBox[{"81", " ", 
         RowBox[{
          SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511262803972836*^9, 3.511262839186801*^9, 3.511281128491276*^9, 
   3.5112819074274817`*^9, 3.511282730633762*^9, 3.511283096057118*^9, 
   3.511284322495776*^9, 3.511284590288198*^9, 3.511320452991619*^9, 
   3.511321020913615*^9, 3.511328385903268*^9, 3.5113445563657427`*^9, {
   3.511344627736866*^9, 3.511344653662962*^9}, {3.511344709097978*^9, 
   3.51134476504459*^9}, 3.511344798555686*^9, 3.51134897921978*^9, 
   3.511349028430955*^9, 3.51134942524607*^9, 3.511349475641135*^9, 
   3.5113495358421307`*^9, 3.511349599496155*^9, 3.511349635599489*^9, 
   3.511349667104018*^9, 3.511349705148589*^9, 3.511351981777419*^9, 
   3.514605926245617*^9, 3.514606054677731*^9, 3.5146069299640923`*^9, 
   3.514625230491836*^9, {3.514628582932572*^9, 3.514628603878512*^9}, 
   3.514634056558571*^9, 3.514690770328453*^9, 3.514693178956708*^9, 
   3.514698903269568*^9, 3.514698943394002*^9, 3.5147039404958067`*^9, 
   3.515838578244618*^9, 3.5168664385529957`*^9, 3.5168770224434147`*^9, 
   3.517291150063653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnsForDDelFs2", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "#", "}"}], ",", "oddPseudoFluxes"}], "]"}], "&"}], ",", 
    "eqnsForDDelFs1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.511261543942474*^9, 3.511261594947771*^9}, {
  3.511261643702834*^9, 3.511261678059739*^9}, {3.511262259745359*^9, 
  3.511262263693705*^9}, {3.5112624296346197`*^9, 3.511262447337812*^9}, {
  3.511262482023842*^9, 3.51126253026333*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "1"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "4"], "+", 
         FractionBox[
          RowBox[{"5", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "32"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "16"]}], " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "+", 
         FractionBox[
          RowBox[{"5", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "16"], "+", 
         FractionBox[
          RowBox[{"81", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["DDelF", "5"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "32"], "-", 
         FractionBox[
          RowBox[{"25", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "256"], "+", 
         FractionBox[
          RowBox[{"81", " ", 
           RowBox[{
            SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "256"]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "0"], "[", "z", "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{
        SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5112628068989697`*^9, 3.511262840511917*^9, 3.5112811286422*^9, 
   3.511281909867546*^9, 3.511282730851849*^9, 3.5112830963148317`*^9, 
   3.511284322504694*^9, 3.5112845903014183`*^9, 3.5113210209265347`*^9, 
   3.5113283860642967`*^9, 3.511344556556754*^9, {3.511344627896771*^9, 
   3.511344653857666*^9}, {3.511344709116034*^9, 3.51134476516425*^9}, 
   3.511344798564842*^9, 3.511348979306828*^9, 3.5113490286047907`*^9, 
   3.51134942525651*^9, 3.51134947572532*^9, 3.5113495360254803`*^9, 
   3.5113495995079107`*^9, 3.511349635851137*^9, 3.511349667228623*^9, 
   3.511349705398892*^9, 3.511351982084136*^9, 3.514605926664865*^9, 
   3.5146060548495007`*^9, 3.514606929981642*^9, 3.514625231032381*^9, {
   3.514628582944912*^9, 3.514628604201982*^9}, 3.514634057055244*^9, 
   3.514690770552848*^9, 3.514693178965768*^9, 3.514698903282743*^9, 
   3.5146989434069643`*^9, 3.5147039405065813`*^9, 3.515838578408107*^9, 
   3.516866438672654*^9, 3.5168770224534483`*^9, 3.517291150242723*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Eliminate", "[", 
       RowBox[{"#", ",", "evenmom"}], "]"}], "&"}], ",", "eqnsForDDelFs2"}], 
    "]"}], ",", "DDelFs"}], "]"}]], "Input",
 CellChangeTimes->{{3.511262534725312*^9, 3.511262574752665*^9}, {
  3.5112821945741863`*^9, 3.511282201962818*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["DDelF", "1"], "\[Rule]", 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", 
         RowBox[{
          SubscriptBox["F", "1"], "[", "z", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{
          SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
        RowBox[{
         SubscriptBox["F", "5"], "[", "z", "]"}]}], ")"}]}]}], ",", 
    RowBox[{
     SubscriptBox["DDelF", "3"], "\[Rule]", 
     RowBox[{
      FractionBox["1", "384"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"48", " ", 
         RowBox[{
          SubscriptBox["F", "1"], "[", "z", "]"}]}], "-", 
        RowBox[{"112", " ", 
         RowBox[{
          SubscriptBox["F", "3"], "[", "z", "]"}]}], "+", 
        RowBox[{"41", " ", 
         RowBox[{
          SubscriptBox["F", "5"], "[", "z", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     SubscriptBox["DDelF", "5"], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "120"}], " ", 
        RowBox[{
         SubscriptBox["F", "1"], "[", "z", "]"}]}], "+", 
       RowBox[{"205", " ", 
        RowBox[{
         SubscriptBox["F", "3"], "[", "z", "]"}]}], "-", 
       RowBox[{"407", " ", 
        RowBox[{
         SubscriptBox["F", "5"], "[", "z", "]"}]}]}], "1920"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.511262808695068*^9, 3.511262842531219*^9, 3.511281128910372*^9, 
   3.511281913215811*^9, 3.511282205412738*^9, 3.5112827310841017`*^9, 
   3.511283096547537*^9, 3.5112843226812067`*^9, 3.511284590480859*^9, 
   3.5113210211051073`*^9, 3.511328386235793*^9, 3.5113445568352413`*^9, {
   3.511344628031995*^9, 3.5113446540772343`*^9}, {3.5113447092204323`*^9, 
   3.511344765299597*^9}, 3.511344798575273*^9, 3.511348979434376*^9, 
   3.51134902871807*^9, 3.511349425267969*^9, 3.511349475954754*^9, 
   3.511349536726565*^9, 3.5113495997852592`*^9, 3.5113496360843573`*^9, 
   3.511349667386073*^9, 3.511349705658906*^9, 3.51135198257362*^9, 
   3.514605926863494*^9, 3.5146060550619993`*^9, 3.5146069302970657`*^9, 
   3.514625231642305*^9, {3.514628583139328*^9, 3.514628604568047*^9}, 
   3.5146328184513683`*^9, 3.514634057665835*^9, 3.514690770760539*^9, 
   3.514693178978199*^9, 3.514698903303892*^9, 3.51469894351423*^9, 
   3.51470394065648*^9, 3.5158385786050453`*^9, 3.5168664387891197`*^9, 
   3.516877022595415*^9, 3.5172911503938313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Flatten", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.511282157293859*^9, 3.511282240328475*^9}, {
  3.511282283733975*^9, 3.511282329753497*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["DDelF", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}], "8"], "-", 
     FractionBox[
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}], "16"]}]}], ",", 
   RowBox[{
    SubscriptBox["DDelF", "3"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}], "8"], "-", 
     FractionBox[
      RowBox[{"7", " ", 
       RowBox[{
        SubscriptBox["F", "3"], "[", "z", "]"}]}], "24"], "+", 
     FractionBox[
      RowBox[{"41", " ", 
       RowBox[{
        SubscriptBox["F", "5"], "[", "z", "]"}]}], "384"]}]}], ",", 
   RowBox[{
    SubscriptBox["DDelF", "5"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "16"]}], " ", 
      RowBox[{
       SubscriptBox["F", "1"], "[", "z", "]"}]}], "+", 
     FractionBox[
      RowBox[{"41", " ", 
       RowBox[{
        SubscriptBox["F", "3"], "[", "z", "]"}]}], "384"], "-", 
     FractionBox[
      RowBox[{"407", " ", 
       RowBox[{
        SubscriptBox["F", "5"], "[", "z", "]"}]}], "1920"]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.514632824384308*^9, 3.514634058198251*^9, 
  3.5146907707916927`*^9, 3.514693179168977*^9, 3.514698903471231*^9, 
  3.514698943643278*^9, 3.5147039409760227`*^9, 3.5158385786229897`*^9, 
  3.516866438799285*^9, 3.516877022766034*^9, 3.517291150573184*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"LegendreP", "[", 
       RowBox[{"n", ",", 
        RowBox[{"Abs", "[", "\[Mu]", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"ColorData", "[", 
     RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.45814936525*^9, 3.458149460390625*^9}, {3.4581496125*^9,
   3.458149628453125*^9}, {3.458149721390625*^9, 3.458149747359375*^9}, {
  3.458149838828125*^9, 3.458150088046875*^9}, {3.45815012234375*^9, 
  3.458150131765625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0., 0., 0.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcDgg31Q+9nVxvEIfvn5ltz0fe/g
/CtXuF8dTHwL58seyBcxl3kD52/NPsLKf/cVnJ/QY/jhZtNLOP/HpOqO/fYv
4PzFfPckZzx8BufP8TIsutz5FM5vykms0PR8AudXM68qL3r7CM5PbDivcm3F
Qzh/6t6nM+ZkPYDzd93X4FmjdA/OVxZwcAqZdxvO36TVkfXo8Q04//7RjQpm
Ztfg/Kc6U432b7sM5wvWrTTTY7wI5+uYvddZ+vkMnN/s8vbCzorjcL5oyLoJ
keKHEPZ9O8p/QmUXnL/09tPely3r4PzYQJktt5OnwPk7uaqvHiqdbA/jmz5i
lGuMWA/nK3/Y/dPq0E4433PxzbN+EYfgfFdfIeavW4/D+f3x1xsMtp+B84/7
yfIGCF2E898qitZdmnUZzi8t0U7sF7sG51+/IxCUduIGnJ9QafOc3ec2nH9Y
27zrMOs9OF+Nc8+LJR4P4HzZPdmurB0P4XyGX0wrix49gvO/B+6NO6r6BM6/
bRIvrdryFM4vCBcQVLrzDM6XnPIkgkX2BZy/LnrB8s8VL+H8cNt6jxN7X8H5
G+Nylaz+vIbzf3A5M+8MfQvnB120NpOd8Q7Od+DQnMDn8x7Oh+YXOB8AsoAY
Yg==
     "]]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    LineBox[CompressedData["
1:eJxF1f831XccwHFf5tSQ6Ixmur5nuSTUODLn1ZqMkjCNjvm6E51LY0Y4HCQr
dfo2ZJYv2blXY8pNKlPyypd7EObLRXKjfB2KS2rhdLTtnFfvzw/P8/gTnkah
Ud6HlRQUFBL/63+tQGfm3Ts5khC1bJK5vCJHEm5U2ZgtvpYjCbZb9odOPpcj
CfZaGYPtj+RIwq6xhYe/iuVIgvepjvLtQXIkIb4z42h43RyS0NurNlMfMosk
8B5EfWS/6QWScDuiSWX90AySEHzWZv5x+jSSsJSVlIkwhSQINYZ180YmkYSC
vTYx0tMTSEJ6ZEiCuds4kpCk/Ed8zOwokhCS1mnaXzqCJFy6P5FXIHiGJNx9
ukX9mvEwkmCiuWu3T5EMSbjJzxSMjg0gCU8llYZ2dv1IwoTlJVu8I0UStFLK
7KwUu5EESzu5ZcliO5Jwwnm2qyahGUnQ9qm4eGhjA5Jw8x/J+hbTu0hCiWzi
3HRGBZIwmKxzpXB7BZKgof/VDa/R60jCseDSnhq4jiS4TAg2nlkpRxKm5uTF
/OgyJIGvtFIV4S9CEgKFfImBqghJyHL275f+KUQSVk7WLjnqCJGENrVUJ/Xu
35CEAf7a84fOFSEJAV6bbsm+y0ESXiy+dohrykYSknM7UWNzNpJQIEtv+2Ly
ZyThVluP5ED3eSRB/CrSZGowA0n4y8Fwm17BCSRhLkW60yMgHUnw2xArOoKp
SMLXjhpKiq1xSEKWJFY3fN+PSELXAZl1R0c0kpDf4om2JeFIwsdDvLnVslAk
wWKszyE3wB9JMFOP/sUq3AtJSOvd0qvX6IQkWK4fEqhsNWX2L6Rf0VxyZc4f
+PRlVMw3zKRsl4cRO4KZqymJ+Ve2HWamCa5FSvkCZqPh6VOFmjHMjFzjaPvz
sUwX9Vq/brV4ZsubOXOVNcnM8HB+2J3VdGaNalJfQ1w2s3irtlRsnMM86Snu
Kujk9MkdaztmnsucN3Jv4A/lMc0ceOIs5yJma1WQc+VpEfOzUUX9435ipsn8
veWdDTVMN+HjDg+/Buae/RuUX99uZl4IepRmXd3ObPbgrfPc0M2cNdJO6bks
ZcbFWoRc0OlnPnqi6R3WMsAMTvz87zXuMmajhf2ZRpVhptmHtVMi12dMXm3E
HpXMEabCilJZzOgo843X/UDJ5nGmbEeQ3uaMCWa0r6aW8ZNJpm7OuN8HvClm
hX/x74sJ00xfp1TXlvszzMrAo8Y73z5nLql+qVxzcJbp3e1ox8ubY6o6qtXX
FnLWiwb3fSvktE5IDMmv4NQwqD6rK+FsjbQd037JuWut+UUNdzlz6YelTyq8
OMWy5pL9vpz64rB7Z0M53x4UTaomclYLDZzWXOX8fp28+Wo5p1l8nbdLJWfO
3oAjP9VyxixczlaWcvL9BfrCAc6RJoey3cOcnnkDdcenOdcqlboZyTkxIr73
wSvOY30uQcErnO+/+95/ARWt21A=
     "]]}, 
   {RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
    LineBox[CompressedData["
1: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
0/VsPwXdDjrTyH7CgNCNRqjVi4IiMnna5esYENVxep1AAwW5jp6D4W8MUDu9
9UpbOwW9Qx57un8xoHvuc18cjYKuZT7+V/aHAavlL92Xm6Kg7y46DvZLCUi+
dvM3kqKiyhNrh3fJEpC/NZ1+9SIVqTkuEpUwxeffO+edB65SUW0ZKe92lIDx
Y/KxS8OpSPDNXVRoTYDyjWdGSclUlNi22EPCmYCX/dUVr5uo6O4ZidX+lwl4
F0pN+CpNQz6EebN5KgFUUszSvYWGWkr/RRoMEmB8z43m10NDEdo8rktGCajZ
U+1wi6QhB6NLwrXjBGQmup7L/EpDCtD6Rvwb1kEW5WEMSToqrp3ZZPmPgPkG
uwpzDzriteilLltLgpdv6b5Tl+hI7QQvsXsd1k+yAo3ngukob90yH3usJ+qD
i7tux9KRRkWDYSTWH/d2LZqor6Iji8ZwtXMa/+nWfJldQgy09dZ09VkjrO9O
/s42WM1AUdUNyn+wH+QRtFA8vp6BPCf7f0SakTB8em6njwYD6YtQr4dgP/h8
vemRIlsGkpjm4f9jR4Jse2Z/1WkGys2Naj7ogPXqtR92LRcYaC83pjHECfsI
WvrZkVAGOiq93J55Guuph99ubihioHz/pCTZ89gv6BkKqr5mIJHYGyB5kQQ5
bnLUXmAgcY4I7xKs1xab6qec7GWglq/oYxP2h50Cj17F/WYgD/9MgTas6w+8
+qydLUAgu5HgLL9grLtd9OpKRQkUsmWXzirsF5NgvL19E4H2fLc+qRGK9dWV
vZ+WmBJowpqH9gvrT6XTLf1T1gSqOFPm43WHhBnz4439zgQyv7VUvh/r1YjN
Xlk5AQSSqMxpCn1AgoXobPTdUAKxkOfTZuwHpeZvXfd5QKDMElocD9bHzzpT
7FAOgQw3v/Qwx/7Pv3qLsUIxgeofZZi4Yn2N8sp2L68ikGfXno1eWH/3XP0o
TnRgfOFK/Ens/1LdTvDX0wlkcyBrqy7W7+4WQ9MFw3j9yqtpEljfz8n/7vSf
J5CPxyGJHOz/6sUi350SIFH0yrdiJ7A/uP975XN9MRLt1Bmn/cXYejQ9ZZs0
iUrXLvdMxv5Ctlvp7koFEpmPeYAi9iMTb8oD59RIZEPo9T3DuCz/wBm2Dokk
t/XmbMJ+Jii2w6rZkERMERfFqP/8T5CtfvFREn17q+o0ibHYmVGNBHsS5Vy8
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

     "]]}, 
   {RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
    LineBox[CompressedData["
1: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
B3cCUNo=
     "]]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    LineBox[CompressedData["
1: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
Vw4eG8j53L8vrY5Fo0Lro7duUyRXVXhQpjupULHJ+FQuOc9LJm0mVg1Tgc9Z
deIYOe+fuPG9f8c3KuTEm1t9I/mtU/G4018qDCxmaweQeuGnUeDvkEU0WHBr
RHiUZFN543kpkjRY9Tu9aT+pN6Jm54nVrqQBQ8osIJHkjo7aZcPraXBF/z8h
gmTVT/fWiGymwe/HcoGLSD3jl2ClulGfBn0Sv76sIbny6hJtK1MaXHfmTm0g
WeIYc/sFcm6qWOL4YxXJx/Wf7X5kR4MjYQ31/5H+0mQcDxY60yB5KsOjleSp
XwrHmB40qAuP4ESSbMIacP3tR4Mc0/lLDEiOfP/Wa+UNGixUy1lMJ+PnxHr5
b79Hgz1qhs3HSVb20wpxfEzup3ViL4U8v6/tj3s3XtDgwWbmzf/pIdQuefya
nAMzVl70DSfzJy4d9KI6nwa8X4Ky1WR+7b9B+uAnGgj1XLnAJ+/jDWVBvlAd
DVIWFl0WIfl7bn2pGoUGpqV5KkvI+zN+GFGzj6CB8xXfUEFSL0V4H2w9P0CD
c/1CYTzy/pU2tfflT9Og6ZCCxxWyPnzEn4/S59Pha+60pRKplz6POv38KU6H
S0EH6z4rkHo3c0jYcB059656dfOjPAuS72VKn9hIh+Sn5mWrSb3Ed/eWC9al
w7LBltuepF66q/JLs2ovHf4dtq6kk/qeIVhqMGBLB6etRzXGSL20buj6LkEn
Omx1OyT/XZrU66mLjlr60qHfrvBOnQQLxtctD6YlkOtffTJ+tIgF+tdeX6xM
pUPbaoX9igtYEMrYdCYvhw7zveZuvybfxxV39uyPqqIDNSvlugf5/hqPBayy
HKGD+IH9O5QnmXB390IJgx90YDXyQ1XHmUB7GT1PdY6c6w3kebIjTHA7lMFd
JM0AOaHxxTX9THhYTBRXGjBAxTIjeheLCYTk2cy8XaSuaIzPLCb1ktK5qRev
rBjgUdTNlmljQslq8VvXXRjQtiftfCrZr3pDjGwN7jHAp1Dh2NAHJmzZl8TP
YzPg8fKrp8WfMCEoVaP/FdnH/YOT9zmTeqnuvxJW1BgDnvSsNkiOYMLxPOpn
LwEmWOiJbpi8Seq95QsiVVWZMJufqVt0ngn0njOqSWTfTfgSL9i1kwlrDL6v
fkiuS98rrLVkB6m/YoIlg0k/py/pOm7VI58ze/rLgezLY66fq3eqk/FnNtTI
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
sB+CbA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {-0.4999999644585055, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.45815012434375*^9, 3.458150132375*^9}, 
   3.511281129772952*^9, 3.511282731536762*^9, 3.511283097060734*^9, 
   3.511284322886175*^9, 3.511284591204114*^9, 3.51132102201679*^9, 
   3.511328386575431*^9, 3.5113445573237658`*^9, {3.51134462835638*^9, 
   3.511344654567259*^9}, {3.511344709476478*^9, 3.5113447656774054`*^9}, 
   3.511344798753974*^9, 3.511348979834982*^9, 3.511349028864502*^9, 
   3.511349425429158*^9, 3.51134947633349*^9, 3.511349537375587*^9, 
   3.511349600209697*^9, 3.5113496363107643`*^9, 3.51134966790379*^9, 
   3.51134970601269*^9, 3.5113519833690777`*^9, 3.51460592866894*^9, 
   3.514606055653678*^9, 3.5146069306493273`*^9, 3.514625232725547*^9, {
   3.514628583648549*^9, 3.514628605338683*^9}, 3.51463405869344*^9, 
   3.514690772027*^9, 3.514693179610239*^9, 3.514698903670702*^9, 
   3.514698943803411*^9, 3.5147039411661987`*^9, 3.515838579988215*^9, 
   3.5168664400806627`*^9, 3.516877023976481*^9, 3.517291151710659*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4581501141875*^9, 3.45815011421875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"LegendreP", "[", 
       RowBox[{"n", ",", "\[Mu]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"ColorData", "[", 
     RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.458150148796875*^9, 3.4581501499375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0., 0., 0.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcDgg31Q+9nVxvEIfvn5ltz0fe/g
/CtXuF8dTHwL58seyBcxl3kD52/NPsLKf/cVnJ/QY/jhZtNLOP/HpOqO/fYv
4PzFfPckZzx8BufP8TIsutz5FM5vykms0PR8AudXM68qL3r7CM5PbDivcm3F
Qzh/6t6nM+ZkPYDzd93X4FmjdA/OVxZwcAqZdxvO36TVkfXo8Q04//7RjQpm
Ztfg/Kc6U432b7sM5wvWrTTTY7wI5+uYvddZ+vkMnN/s8vbCzorjcL5oyLoJ
keKHEPZ9O8p/QmUXnL/09tPely3r4PzYQJktt5OnwPk7uaqvHiqdbA/jmz5i
lGuMWA/nK3/Y/dPq0E4433PxzbN+EYfgfFdfIeavW4/D+f3x1xsMtp+B84/7
yfIGCF2E898qitZdmnUZzi8t0U7sF7sG51+/IxCUduIGnJ9QafOc3ec2nH9Y
27zrMOs9OF+Nc8+LJR4P4HzZPdmurB0P4XyGX0wrix49gvO/B+6NO6r6BM6/
bRIvrdryFM4vCBcQVLrzDM6XnPIkgkX2BZy/LnrB8s8VL+H8cNt6jxN7X8H5
G+Nylaz+vIbzf3A5M+8MfQvnB120NpOd8Q7Od+DQnMDn8x7Oh+YXOB8AsoAY
Yg==
     "]]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    LineBox[CompressedData["
1:eJxF1P0vFHAcwPHjMjp5XDTlyOM8zbjqLDKmGHLGjdHEOS21Q+qW7swmdK2r
aSxsl9TaDpF2FyU7juO4nRqTzsNxOu64y53OkdQxm2rL5/vDe6//4O2RV0y+
ao7BYEh/+2dwlLN+f98oOrB4x4u9s4t8+y7Ud2sbSfAj5WnXkGEOrPmxWWT0
8uanp3wk+cF4xykKkjHBKro2sA5OTVnrh6gGED9YfDTM9TvYXTBiYfdVD+ZW
h27MVelA05MytihqFeTaKl04Ki3YlBhKlz3UgFWFVKZ/wgpYhn3NoBvUILVi
wnumTQU29Gs4TbQlsHfR78gbTyXoZR8dk/ZCAXYFsGnqZTm4KOk8SSTOgJqg
BoLogwx0KG8nBptNgkFEY1DL1hh474Lhs4ApBZ3SeLWXjonBrl8Su1HvXrBF
oXmsY/HA7FTX94or9aAAVzYtLqmLOvCM2sytMpMPem307YSLBWACd248OVMM
xpIcsdvdUrCGMlsR0jMGSpPxNimOk6DBw6n8S6MMLLkdSK1xngFnF+zJ+aNy
MLf03DfLJAU4HBj2aNhCCfoeFq42xy+BeGFBrAVbBWJ2zdvpajX4O7U/R+Kz
AipOU074sDTgzQx7B88FLehSv5J5CL8K8rJevtpi6sCMyLvxo/16sDOnyDN8
bw004c5jBekGkDwZQcRz1kFchPWQ8DlyqHn+4mUuMoRZSn3GQ9q691S7SJAf
CwnLTj+Q0Vb+tbZJRtB0y3Scl4rkK6QtpAykGz+/rzoPuZferMWVInu47pGW
rcgbNkZpawfSlzFAjutE1idmX78vRNI3G+uwMmRAFs2NK0eqRs62xyiRKRz5
QKUOaWXeluBhRIoKGFODP5F3puMoubvI/98C/wDu85Pd
     "]]}, 
   {RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882], 
    LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
    LineBox[CompressedData["
1:eJwtmXk0VW8Xx2UoSUiIqCSkUiGpVLYKyZQUCRmjyK8iRUUkUSpDKJkzlFRo
FKltjGQe7nTOve69hpDcSgNSvae13r/O+qyz73PO8+zvPnt/113qedzOW1hI
SOjtDCGhf9c1oDDy968Ao85dCv13PT657PLklAA7t71S7uUJsPSprub4dwEq
+s+Pb6oVoJ6WtefgRwHuq3w1UhcjwA3zoljNdAGen+Rt2ykjQOO+L023SwT4
zV6vLWLZGNrFtDxY5ybAh3I2XhV2oxjcFvXf4TdjOJXQ4tLbNYTd3XNGqj0+
ocEWc510Fg8XVR2X26AyivkWc0yLVBn4/GidmDR7BKtGWXsL1ZrR/ZruZ2bk
MBoLqf3cr/EEJ26cu4wwhO4J7duW/ymEDyrVI2aGQ5jz+qfMpfH7QLs707pV
fwiNQ78ObhwqgqcVifPYK6j7NR+N89oewjH+vbSp+UOoc5F2fIdlKfTpdj9c
P/QB3aPXldgLP4PWdu2OBwkfMEF8t/gr3VeQJ8VRSuUN4uivti9sqzq44Qyz
NpGDKDclnzJ+vg4iC3O+MWmDGLFnRhK/tA48t3u1KTcP4omTC2ut5OpB7fRQ
VPaLQZRxuPXVjlkPueyvgrtXB/Hz8pqINS4NkPNw1tvn6wdR+7rMiIdpE2RY
6AZ2XRlAbrd+4It7baA+x6KpPWoAn11rWFDS0gYP3nuqtYYPYDvDTOHyeBtU
WCV3Np4aQIlfNZn/LWkHps1PvTceA6jVW3pWxK8dFPa+Hi/cNIBN959bbZ1u
h3jnXafOD/ejy/lOFRH5TlBQ8Ww519+P/plL1SQ1OyGLPKtxprcf45Z3vhPb
0AnFBx/2nOzpR2OenPR7x05odpM28K3uR4V7NozM9E4QP9TzY+/tfrT1mpF9
eHEXRPp7hKzY1Y+dXZ2NBYrdwIlzzajY0Y8WQrJJMiu6wfCxc5WlEfW8Lkm6
76Zu+PrdXvzYOmr9NKHeDwe6wSPcIvXJon6c5h0LlE3rBuMb615u/tqHGYqM
Wo0FPfCnTGzCOr0PA5WOfvMWpYETS1ilN6UPc0suy9yXpcGL6b9wIqEP+21f
bSFUaXBs21TMjUt9uIa3kiG5lQbsprEF9ON9+PZEdVZBEA0q2fQN7iZ9WCNh
FPOYS4NzIkXBgZ/4OKgqcn/vQzocu+06032Ij6Relt7TMjp4rp2fYt3HR9vL
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
n+9KAg==
     "]]}, 
   {RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
    LineBox[CompressedData["
1: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
B3cCUNo=
     "]]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    LineBox[CompressedData["
1:eJwtmnk01P/3x7XZkq2FipJkKUVCKK6kLKVESZssJSFJoiQJlSJJknxUQoRC
UUnq2sk669vMmyxlmRnLKC1I+r2/5/z+mTmPc1+v+3reZe7r/T5nVrifdjg+
U0REpJn6+N/3Olgk+PdPiPVv7N5OU9+nJ1ZGT0xSnM44Wl8sxMKi9epjP4Vo
n2qb33tSiHqadu79g0KMlvM5tYA9ghvlosimNiGab2I32BYMo/nXbw0PCoTo
b53+rS9gEB2uN+dtOCrEcr1XGmcMBvDulnabtQeFKB68yUH7Rz+y/vAG1PcJ
8bzj5voNRf3o5D9bbckOISZLLaCp6/XjoQObUkU2ClElYWHf/Q19eGxNTmyz
tBDjDyvJXLT8isGtUadOfBxB8/619d3GXRg7GNT2o2QEdfcPXLUo78R0sZNb
IopGsFDLbIeNVSc2gd3Ch89GkKaXIGG5/zOqFi78wEgYQdfWZVo9Ye3YEp8l
ZXaCWi+ZaLBnqA3VHerzFsiOYJrE0bCmzXTc7Fe6MF1yBLtpt97yCBruufn8
ss4cin9JbvrvDA1DK+MdbSeHsVv1ZV7EnlZk6B34c7l3GMsNJAskNzfhpfkC
28ESyv5q7xJ561pkseYKKtyGUcRnYkGxzxu8cuz1x7zDwxi+OlZaRu81rvvh
cvfefiqvMy6c3TZZhNHzX20+aUfZeV0/zOJfoqmD821ZY4r3PnEKzczBrNZM
/aOylD99D6nWk7fwfIPp5amPQyhyg//xZWIurDo44Nj/juLONCfvpOfA4Mdr
0oqHMNz6cnZlYj5oS/TSM3Ipe1ljWP7Wl9BjdVNtR9IQmqcFTZurvgbbGuLT
g1PUekZun3d8GSiXn16wUWkIXRPtFg4p1UCTvEGgiQK1/0RC7f0rNRByfJJp
Kv8/Vrl5va8GCMmrdy3Fh7DcY3WGQV4txO9LkXf4MYjhbp9iO9bWw6zBatlT
TYNI85YabZNthFemN/396waxO7xpVNK7EVzjd9POVg5i4akOx5jKRigzIG+H
lAxifJxfbNCZJggKF0pHZ1L+Zno1iNY1A3/hknkZoYOYZtH0tVaTBsleXb5Z
wYMo2+uTMbybBtvfZzblUH1q/gIeYhAN0l11Ygu9KA65e8SzigaH8yznftw7
iJobcjtqnenQan5agqtN+Xt0qkUukAGvfarnyHwWoPPCZwve+bHASMVvfVab
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {-0.9999999591836735, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.458150150796875*^9, 3.511281130088238*^9, 3.511282731611237*^9, 
   3.511283097115394*^9, 3.511284323139936*^9, 3.511284591265332*^9, 
   3.511321022385152*^9, 3.5113283866522017`*^9, 3.5113445574295683`*^9, {
   3.511344628432379*^9, 3.511344654677198*^9}, {3.511344709546526*^9, 
   3.511344765810341*^9}, 3.511344798844412*^9, 3.511348980020973*^9, 
   3.511349028956552*^9, 3.511349425499178*^9, 3.51134947642159*^9, 
   3.5113495374454517`*^9, 3.511349600282839*^9, 3.511349637020074*^9, 
   3.5113496680544043`*^9, 3.5113497061528397`*^9, 3.5113519834516973`*^9, 
   3.514605929042428*^9, 3.514606055703617*^9, 3.514606930711379*^9, 
   3.51462523280151*^9, {3.514628583717395*^9, 3.5146286054503937`*^9}, 
   3.514634058801573*^9, 3.5146907722359743`*^9, 3.514693179768262*^9, 
   3.514698903817297*^9, 3.514698943894615*^9, 3.514703941320858*^9, 
   3.515838580333971*^9, 3.5168664402418747`*^9, 3.516877024570641*^9, 
   3.5172911524615097`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQWY1VX3/n1kkkZBUVBA7BYDbBQbFbvFAkVURBFFEJEO6e7uFKS7u7u7
Y4bpPGfv93z2XvvEeMTx/T3X/7kekDkz8421115xr3ut/cpnDb/6ot5nDevW
+qzC8w0++/6rurV+rPBc/Qb+j6Iu83gKXOvxXPZqBQ//1h6P+0v7/2//Ksdf
fBzpg8vNv6M89ne0/cPfhewPZZn/lLwm59S0th0b19v0fqXivqgCRSbe+tbX
jRu1HRV3NEtH69yT08bUKHuwSMWaJedd8PEbsTr7eNupjV+d8dhLn/b/5su3
5lV99su7+29N9fj8V4v5l3tmm/9E+//2vXt6XJX0ooXurtjlYHYB83ERbjdz
VPXSRwuVe7/kbHO7jN93NL/naIlyn5dYfFH5v876cV+nSidKlP2w1Kzzvv9w
t7dPT3govVihu6/vdig7yt7N/7e6zKvMLxTXSctPvlcmfkC5LzZ60kSWuUcH
pN5XpGjtBwce8+RqHf0vdztvv3+ZVtnXnjt+pMLhw4c9MebvqPKHjxyPPZ+t
5AoRnyrWfFzw9sydv2TdFFfsnYfGnzYi9X9aRKeuO1GzbMy8K56dd1mCsr+c
j0cppNN3zGj60iNrqlSp4okxf0etqPLoK7e23J3x748S9Vjy8ureUlGlHqu+
PNljlyg6Xmfu2tP0lvgthe/pHnMo51+FUsJ+f3778YNndpgywnx16pJ3rXZx
YVVviajSD725OsXdNU5n7dvR9o6COwve3jpub9a/3rW4+U+MfylU7t2dpuvb
Os6YqHq8X0YnnvKczN87v7g86ZLvHGP3o/9f8aFvGrvx5ZGr9VV/bMhM+aZ4
kvryqnp6bu8CWvmO/9uqN868Ob7ou1XGha/6R2bV51+WmI9Vt08QN/iH2Yd0
bOtTP+7Y1W2W6lhDq4/iNqjfHn5AH9rgOXbJxyimk1ecfL9M/KBytTZ4Uu0t
yucc6ZtaqUjRWpUHmW2Qz8coWLfv+gxdoGXChDHrvuGTN/T6P4+q+jf6VM2C
PdSIH0ro9Iuew3ah4lTWqcq71s7vM7xuxfR4+0ge+0xIN6PZzhb3Hitx3SdX
LEjAKGT+vLvDPceLX/sRRuLfjIB9nEKvTN+bw+NcaPLX05f5dz6fFtZZaZ3U
mEa56pPCp9S35d/Xq8Ydsk9UwntxfZ1J/dr3avJNzVk1Xvyw7JgTuZ44K2C/
BTzZanrTN2Y9/mLNQXVqvTHniefr3jloe6pH5cMC2seJvm/jqVweR9caW/3e
s8lb7E6MuUcf3bpONXuUNZuv2r14kz6935OWv0tedTbNxyXVm8Nr/7z2YCe7
TrEo37d6Xh+UMVN9Vvx3NaVVvM7JTPmXq4r7yCrYJuFMjRG9549f+6IsSQz7
aILq8QFPuU81vOMZvWOhJzlf14s+cFPPizteGL48s8uc4gVzvRlWpjHP623z
DqgGt3HJ0arPJ1frpDOei/m75JKnhidvfXjQUf3HrLjnD52fZzdkbEGdndFS
TWqRrT4telF9WbquXtAfYSTk76qjPvoz9XDFHokZXeaW6LJo10/2uzG36FN7
F6q2z/Oga9Xvj92rj2zxXMjfJdv/siA9O75NwqyJ617bOXjZvYXtg2KmPtIr
xpxR31yHKnZVoxoW0Zmp5/J11Zhve63LZN2bzt09GBGUS844ZrwbauzfZP3U
kG/YdMfVdxXZhJ6z+bvuq9P2ZHPdtxccOMB1a289NsRTzH6vsj6wbrP6tTJS
mK46v15Bnz/iOZ2/6zrVf3Pyruwj/RbfNGnqpvfEYsdGa2/u93p2j1RVu2S6
+vzyRnp6xxjtzTmZr0vHXnkuXXHp77utyew3d/s3Sd3nXRWllNfukJhrdcKJ
yarbuzz1dvXLfY/pvSs9J/7l0lfY380s1DaxU8N56a/vOzMVaTx2PHGl+97L
etPMw+r7m5WqGT9IDaxTUqcmWEsbHfASBcOutu+WXkkT3pmUWjwrNymn0+wi
LZfva+EpaV+ikM5Ob6/G/ZqjPilyXtUt84leNhIVOZK/B1349IiUVY8OMdtx
+ZjVT20cvuIhz5X2e3fq4zuWq5ZPIYClqvXTt+mTu8UG/9t1Y4d9Oi3teLlu
Zk/+subgH+qPWfFlUrNOXRlU4lp6ydAL6qtr2HGt1MTm7MCD+bt666aLMrwx
rRKic336rnMp2xHx59uODyttH7yUTrkwTPWvhYQxE8/pbfM9B/J36S8HbMxC
Ka47lmwC2KP9Ft84YdqmD66xl35C716+S/18DzIZq3rVvEZfPO3Zl69Lx1Wf
td84lUdXHMvlk4Fztn+FzsX4VI7HXj82VudmN9HT2meoz0uEmqE9+bvFndvP
ernFe+N2mHD2tX1npiGcp45eWOIpa1+hoj57yHn6NX6bhBfx7M7f9YumZJst
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
7Leilo1ZXY3kzXz1nn0V4h3wEl5li2ry4EN6/1pPx/zdo9R5i8ICTLt7fLnl
2KBAkvuBvQdYD0tBHAdIbTKqDv9yD4uqRSVd3iGxx3ez00OX/YrMnITsznOK
dliyp4nnQysuNAmNQrPOqq+vdeFDu/zdZtP9A5JmvjTGKrG8Cs7jWN9FN5j9
+JF9FTbGKtX8ibDw4TvzvZKXKpjnLbAX0L6UWpsHfbe2euVHB75e+7uB39V+
c2a16l891Gt1oser/728JM9NSrDntt5Joc/97u5TE1iCqscSlnlqBo3tl3rR
oERV5+pQ1NZU7Ew6dskCfN6CfZWUNTUzyhYsU+P9aWfN4/p//psDvR6+WKLE
Izd12peVz6dv22RhBslGFNV5efpCOd70lG7zSvWfu/1rzydW6lfp5HMjVN/P
HCoMguX52nyveH4q+p4QBkCp3PMLmnZpNTb2WLZDTaLLeE+OSqlcNLbn9d9u
8aT/OwNAHr/2oE0mULv+kD9QszUe4+kSesy/Jtbry/Z8ah//Sb1r6W71890o
DeU0U562evvvLAL7iPmjC1jrG11CX1ycWO3yy5aUqLrAk5jv16m65IgxGc/O
P5jjXufZw+cXoEs19p+d7vnM6hJOuqme2hanHVr5fl8W8N/ICAJV5Yd1IC90
Y/b+9hl3FIzpV77OJtY4ny9EIYAX+qrfhiz3QkQ7p3svLEdO66ll1+cGffYg
UQ7rA4Z8vz600fOF/fn8sBSiArsvaeiKT994vtmc4/FZKusmlb50ztC3rkyL
K3b7Z+12zX5Fq5n+NG1i1JdaDfYU4eH5l/tTW6uhb2s1+VWtpj+j1cIHtdpQ
UetDpbS+UEBrn3nBy8JekNCXelXHn+anSyUwAAUVy85N9tS2L/iOXjMRmMmF
pUV1Zoq8fCQiRHGWYX/TW+L2Fb7nx3cPZU9poFX3bsrXcLLyvbdS+R5PXf5u
4aw2vQrrH2pF6RcfKaCrvhGt+6+K17negp4YrbwFDWsiln95CvmUt/AF5S27
W3nvXax8zw9XvtodlO/Xr7Qa6Jf5rFu13hOrdXamfbcy9rl23tk3CWDefCWL
V/lU0jq08dPtJ0bIAhmQoJcaVh/nckLVu96ABJ+b7135VObOetk3xxcaXmVs
6yFeXx3/sz+VqJKu1B+V9egrnonTCbkFecZE5b1mu/LdP0f5qu9ZX7fssFa7
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
RHEECsQ4BJ6sDMFnT+X74Sat98vbxyP55iv2tYKcwxsTVi4ct/b5H9Yf7n5r
Qtoey6GJZxfAEBw9fcsn7HF+lF+Bd0GZUUi1d+09dbxV15lTtrzyx+/+dTZL
wAuvf71Ty7HfD+/XpvOMyT8OXjTHU8AIKearMSsWo6k9W0waNatWv64nHmv2
o/xe1NGqzRt2bvvnOK4pJqbgbbvOe78YuDGre/056ZPemphKEXrKGxNSwfnJ
es0GejpseR3y/PMfKzPd8rI72bh4A49dgHi2KY9y7InfG/IApx757Ye+zSaM
eGHpru3FUjMzbEpWsERyRnr1JTu3dvE/2V7/9uNHc25r8MWUrwf3enHprm2X
KaUce8PRy0jVSNkMDmiJMHEYOGw6u4W1Oa28FUgUsF5Scw5fU1vrjmW3Yc0w
iCQQ05Xvjae1WnRVcJ3IFleOXl3VLSfFWupP1LluE83I9qaCi68ateoJfgwA
ikSaKFpCmYII5JtRyxduerVjc6fri2r2+uPnAQtmPbjt6CH2gySq8eVPJFyo
NWH1MpQdg8TPr3y3W9vX523d6E9clJReypxM8f3WalkGLFH/MvtXxRMDS2z7
3f2SNjw4MHnrvf2T4NXJ96L4HOJSofQc5XnSLuu19lInrusapDnIssKU4k0Q
gsQYcbE53txf+s2fmfBA43o81bxP+3SqsWD75iie3lER95460b7jXxNP+5ec
nznwdKtf0Ex+12MdruHzhTJYoNR7brK/f4XWiazdOeW9jrXcpHwPES6T5Hse
ibCW1jnGldb6LHHNWeUtx++tVr6qODgTtNkdFcce5L2oJrFSUAxx4kDoYpli
cVPDZm2tRdBDKRu3zu9ZNCmu3MnEhG6tp4zBPfB6q9/u2rru6BWLsD6OS3pF
Unpa/WFL5h+s1rIRP7PtpfbNnl+2e7tNV+JgkQ34ckYa4CVs1jkvjE5hHxre
jwU/YyseTPR93Wd9FjU9lo9iO+B/1bB1W1xteMqKx4cmh64blGPejaBM4sAY
br5P9hfm8r4dx49IMSkuJtfrfW/GxrVr3+zciu8ff/z3H3n40PWKyAaypMPY
slqfBG/AHmJPZyjf64Rmj0dYKktuiCMPZLvuV947nZNjiYlFZMPEs2zQ9Ikg
eB08Fw7uieMJy/me9aGxpdOyzhI9UFRje46cseVTqO3S1nDVhdTk3s0njsy+
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
ByQZ5bAPEMTgDzjkCKHDJUFtQo+EIv6sVpjPGuj22ZQp6ww9bFzWB/8cP938
SuMLFcJn1UUUfVZdWC8GIZ5UXewXb1BCSaC6oH4Kx+BOlw1Q+ObuFFGyMpgB
7Ac8llnByYPDyfD/fuknT5BBZmg0u88kYv/lUOfPoUJDH5xnplKgztzHMCDl
cE5CR33DZIHwqhS+DuJM872CL6DKcrlr+CkOtcY6mJ/QL8+Y+sbJtqBwT3BT
5Epxc1ZNIqmVWEeweOT1P4pnq/F+E0gGOq6wuLTjNPFEYr2oAyuPtGKhPLwn
yxqCFiC+SFMxZdqiswrleC4YiYSJiZiET1fArjtnyvxubE/AIYX68LyEagIk
uILe1oY9H+tG9hbsue5NdEJk7jzgsots7lhFhGTSdO5EUA7VC3iZnEUy1ktk
LunaAnSAvU4jLA1QVGNBcHZw6BIP4jDm3KmdXNeVwxilFMoYpEI1wWTu8f+Y
V6y1Aa8vv50pjp8tHHoXJtQQ8DmVNJin0TwN50ux4QrJuNFlg9hRpCZeZwhA
o5wc2jjCi35BXhuimuBcweelQ0QTTeBWrjryuivkar948xro3ZDC/ITECtf6
mV+1hKSVAaoBWOspW47vRp3aOtfQgWIBlZigdp5Gt6YBb60Wk4xItK17TAaB
4HC1ZyQxvgA+gVwpZo8nrHUNHSnf4kiaLrfbVPrtq4c8edXJTx9x/Lkj+15w
2pyjjr3goJGLt9Altdx/s3bahJPaLd+9Y882c9ZnzX32Za83x/Sr69apy+j/
6t1vdL/ep844pttFnYfPk+bHBrCIFBHmm6CeSaXiCZJaBeJPqlXbrVGazsyC
CciG7rI3PhzG0BEkzunoijsaAeE7Kb8r8QTf6KSeoCpCATkGwBMnXJXDIwgR
EYktTM//aOt1bw36z5U17c+reX4jLIz1ly+74+dratr12HPm5xmamDG+214r
W7bvTqvFQ798vefWdtVtT+o+7VN58+Ln+34w/LCNNTWH73/HsvqUIoJ3VoH3
ghfDUmZJS9t61YLBEAXVotwsWCuczhSt2gQmIJS3hNMJjL+HLZXQArMGLUiu
Q+/xCB51k8uuKzwl91q39pteXntm2xaj2p+/kCb13G3/zcpRWw7efY/eh4wO
XU2LO26zhtDtc89vPp97zdAbJlau2p67QW0b1o7/stMelfd0uPjvha8bezmW
aiLwYlbQXg7YifVal5SGUgNVeL8D44kwLsFUVQZ7JiRwpWuDzt+k+SWYqMro
c98b9XkL51gZzBzORKmqUJQtT+BJAJVJDQZ90DX4r/X7V7X6Q+fJcdfgntI1
eE6zL1xO4ljjNz6/4ZgfNHuh5qi5hQ3p9/7vsBRKmaFLswUBOVnG5sr8FPYk
fW9ilSwFMdL1vSGay7Ey+t7G8I6j2uS9CcrnSBxFsoxw2cUcHRItfVrNDmu5
3e3lzd/Vclvf+V+3v3/L1n+vrhix74WLmC+pdw6RQqFofsbdenwUrtcXZgrm
oUpNxRE0wdu7Z+7b/e2FD9CwjhSh6QsD4s2p1PSF2zduFQy0bBV6zwLUYvzM
CPd2pYN9Y1PrTWNfOff3x107e3Wzeudbuq/fe2zsaXtvrmrV6cCb392WWvZX
BwUkcbQn2tN8PVMP+x3jRnUAFAZTU1xZLbojjUllLewqpgNSbgSqJKkY68D4
DeTcUFwsphR1aeQmyI7MaDLu/7828aMv7X3mK127dJp61KmXHTrqdTkHRA0V
KCGQNuWuUoRrDS9fxtxjDjIXbfStgbG0fNLRB9uZ2/X65gSr8jr4NtGb954y
78X8jFf4x3CX9ccNECt7Zr7Gd7WnedyZPUVCrDwISUipBriokGIGFi0CqwEo
w78g9iqsV/q65ueJW6ivS103QfbE64JMpj+JXGkK+CjvXsrxJ7PC637vttup
17027GdNYZzsbexx3WwS+W1k4jDfqY/Tl2Zlw0ou9cM6uw0r2/nNFcvtpeHz
JN6WeGmSd+Rc5ErjvMxoGFntabPyKfv9+z/HLa5Tu9ygMPBNAZXSQFVjv2am
y2ioDsAjMs+p8DEdkCzKG+CpDqwtbrs1X2amA53TJPcarCWzDjy7GwMv7u4z
4az8nm2J44bLqVcfHF79WL9krqEY8yBt10Z58nWnfF1WXUEHA+s9DNwbyKt9
t/Uuhku+yWuTa0BL5CUsvWUalp3kHwlRQ9xJEH7Xu8cHN2WrPa5xBjF7bH9U
gYlU41JJ9CiMVRVuJtArewIwwhxIHwt82YPPP0OeUPKAbeOVYft+Suabgnp/
4tctfdYNOS4igj0uXudyqKm0IIyZWaRzTFqKPREBNg3ZoXdkUr0GHrWJtCRb
8hdrG+9cckwvSYiqxfNY+jCtwbhWyrH628ZNmFGCrdikJRYppKnyruGe9aCQ
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
WQ==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{"n", ",", "\[Mu]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.511186447060919*^9, 3.511186455533551*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\[Mu]", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[Mu]"}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"30", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"35", " ", 
       SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", " ", "\[Mu]"}], "-", 
      RowBox[{"70", " ", 
       SuperscriptBox["\[Mu]", "3"]}], "+", 
      RowBox[{"63", " ", 
       SuperscriptBox["\[Mu]", "5"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.511186456096129*^9, 3.5112811301121264`*^9, 3.5112827316363297`*^9, 
   3.51128309714869*^9, 3.511284323479727*^9, 3.511284591301318*^9, 
   3.511321022401523*^9, 3.511328386688415*^9, 3.511344557476388*^9, {
   3.511344628457479*^9, 3.511344654718268*^9}, {3.511344709574401*^9, 
   3.511344765995077*^9}, 3.511344798870899*^9, 3.511348980056568*^9, 
   3.5113490290953703`*^9, 3.5113494255305023`*^9, 3.511349476457467*^9, 
   3.5113495374794397`*^9, 3.511349600304002*^9, 3.51134963704873*^9, 
   3.511349668082777*^9, 3.511349706171545*^9, 3.511351983485539*^9, 
   3.5146059290739107`*^9, 3.514606055743327*^9, 3.514606930736135*^9, 
   3.51462523283593*^9, {3.5146285837643223`*^9, 3.5146286054959927`*^9}, 
   3.514634058847515*^9, 3.5146907723519707`*^9, 3.514693179792164*^9, 
   3.5146989038398438`*^9, 3.514698943941307*^9, 3.514703941374173*^9, 
   3.515838580448572*^9, 3.516866440388335*^9, 3.516877024635665*^9, 
   3.517291152926181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["j", "+"], "-", 
  SuperscriptBox["j", "-"]}]], "Input",
 CellChangeTimes->{{3.515838582160006*^9, 3.51583859276831*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "Q"}], " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "0"], "[", "z", "]"}]}], "-", 
     RowBox[{"2", " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}]}], 
    RowBox[{"3", " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "1"}]], "[", "z", "]"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "[", "z", "]"}]}], "-", 
     RowBox[{"4", " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}]}], 
    RowBox[{"7", " ", 
     RowBox[{
      SubscriptBox["\[CapitalSigma]", 
       RowBox[{"a", ",", "3"}]], "[", "z", "]"}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"5", " ", "Q", " ", 
      RowBox[{
       SubscriptBox["\[Phi]", "4"], "[", "z", "]"}]}], 
     RowBox[{"11", " ", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", 
        RowBox[{"a", ",", "5"}]], "[", "z", "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.515838593585011*^9, 3.516866440602717*^9, 
  3.5168770246430407`*^9, 3.517291153642215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"even", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", 
         RowBox[{"2", "i"}]], "[", "z", "]"}], "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"Eliminate", "[", 
          RowBox[{"oddPseudoFluxes", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"evenmom", ",", 
             RowBox[{"{", 
              RowBox[{"i", "+", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Phi]", 
           RowBox[{"2", "i"}]], "[", "z", "]"}]}], "]"}]}], "//", "First"}], "//",
      "Expand"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      FractionBox[
       RowBox[{"L", "-", "1"}], "2"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.517293284135742*^9, 3.517293298810782*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["F", "1"], "[", "z", "]"}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{
       SubscriptBox["F", "3"], "[", "z", "]"}]}], "3"], "+", 
    FractionBox[
     RowBox[{"8", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}], "15"]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["F", "3"], "[", "z", "]"}], "3"], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{
       SubscriptBox["F", "5"], "[", "z", "]"}]}], "15"]}], ",", 
   FractionBox[
    RowBox[{
     SubscriptBox["F", "5"], "[", "z", "]"}], "5"]}], "}"}]], "Output",
 CellChangeTimes->{3.517293270142664*^9, 3.517293300391923*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", "S_", "]"}], ":=", 
  RowBox[{"S", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["F", "n_"], "[", "z", "]"}], "\[Rule]", "1"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.517293348882485*^9, 3.5172933678511333`*^9}, {
  3.5172934110628157`*^9, 3.517293413410231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "m", "]"}], "]"}], "\[Equal]", 
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "b", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "0"], "\[Rule]", "0.012"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "2"], "\[Rule]", "0.025"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "4"], "\[Rule]", "0.025"}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "1"], "\[Rule]", 
         FractionBox["Lap", 
          RowBox[{"3", " ", "0.025"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "3"], "\[Rule]", 
         FractionBox["Lap", 
          RowBox[{"7", " ", "0.025"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "5"], "\[Rule]", " ", 
         FractionBox["Lap", 
          RowBox[{"11", " ", "0.025"}]]}], ",", 
        RowBox[{
         SubscriptBox["S", "0"], "\[Rule]", 
         RowBox[{"0.0155", " ", 
          RowBox[{"G", "[", 
           RowBox[{"First", "[", "even", "]"}], "]"}]}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "m", "]"}], "]"}], "\[Equal]", 
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "b", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "0"], "\[Rule]", "0.001"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "2"], "\[Rule]", "0.025"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "4"], "\[Rule]", "0.025"}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "1"], "\[Rule]", 
         FractionBox["Lap", 
          RowBox[{"3", " ", "0.019"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "3"], "\[Rule]", " ", 
         FractionBox["Lap", 
          RowBox[{"7", " ", "0.025"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "5"], "\[Rule]", " ", 
         FractionBox["Lap", 
          RowBox[{"11", " ", "0.025"}]]}], ",", 
        RowBox[{
         SubscriptBox["S", "0"], "\[Rule]", "0.0"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "m", "]"}], "]"}], "\[Equal]", 
       RowBox[{"F", "[", 
        RowBox[{"Normal", "[", "b", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "0"], "\[Rule]", "0.075"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "2"], "\[Rule]", "0.075"}], ",", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "4"], "\[Rule]", "0.075"}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "1"], "\[Rule]", 
         FractionBox["Lap", 
          RowBox[{"3", " ", "0.075"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "3"], "\[Rule]", " ", 
         FractionBox["Lap", 
          RowBox[{"7", " ", "0.075"}]]}], ",", 
        RowBox[{
         SubscriptBox["DelDDel", "5"], "\[Rule]", " ", 
         FractionBox["Lap", 
          RowBox[{"11", " ", "0.075"}]]}], ",", 
        RowBox[{
         SubscriptBox["S", "0"], "\[Rule]", "0.0"}]}], "}"}]}]}], "}"}], ",", 
   "Center", ",", "1", ",", 
   RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516877678787779*^9, 3.516877750713356*^9}, {
  3.516877806037056*^9, 3.516877885280081*^9}, {3.516877951857538*^9, 
  3.516877969442299*^9}, {3.516878032635562*^9, 3.516878034223052*^9}, {
  3.5168780935823727`*^9, 3.516878125686473*^9}, {3.517290961648225*^9, 
  3.517290967111095*^9}, {3.517291009461244*^9, 3.517291019717441*^9}, {
  3.517291061738474*^9, 3.5172911337863827`*^9}, {3.5172911775544024`*^9, 
  3.5172912357714777`*^9}, {3.517291749093842*^9, 3.517291851121705*^9}, {
  3.517293308988862*^9, 3.517293328106143*^9}, {3.517293399405603*^9, 
  3.517293402693055*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      TagBox[
       FormBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"13.333333333333332`", " ", "Lap"}], "-", "0.012`"}], 
            "0.008`", 
            RowBox[{"-", "0.0064`"}]},
           {"0.008`", 
            RowBox[{
             RowBox[{"5.7142857142857135`", " ", "Lap"}], "-", 
             "0.019222222222222224`"}], "0.015377777777777778`"},
           {
            RowBox[{"-", "0.0064`"}], "0.015377777777777778`", 
            RowBox[{
             RowBox[{"3.6363636363636362`", " ", "Lap"}], "-", 
             "0.021302222222222222`"}]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\[Equal]", 
      TagBox[
       FormBox[
        RowBox[{"{", 
         RowBox[{"0.013433333333333334`", ",", 
          RowBox[{"-", "0.008955555555555555`"}], ",", 
          "0.007164444444444445`"}], "}"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True]}]},
    {
     RowBox[{
      TagBox[
       FormBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"17.54385964912281`", " ", "Lap"}], "-", "0.001`"}], 
            "0.0006666666666666666`", 
            RowBox[{"-", "0.0005333333333333334`"}]},
           {"0.0006666666666666666`", 
            RowBox[{
             RowBox[{"5.7142857142857135`", " ", "Lap"}], "-", 
             "0.014333333333333335`"}], "0.011466666666666667`"},
           {
            RowBox[{"-", "0.0005333333333333334`"}], "0.011466666666666667`", 
            RowBox[{
             RowBox[{"3.6363636363636362`", " ", "Lap"}], "-", 
             "0.018173333333333333`"}]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\[Equal]", 
      TagBox[
       FormBox[
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True]}]},
    {
     RowBox[{
      TagBox[
       FormBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"4.444444444444445`", " ", "Lap"}], "-", "0.075`"}], 
            "0.049999999999999996`", 
            RowBox[{"-", "0.04`"}]},
           {"0.049999999999999996`", 
            RowBox[{
             RowBox[{"1.9047619047619047`", " ", "Lap"}], "-", "0.075`"}], 
            "0.06`"},
           {
            RowBox[{"-", "0.04`"}], "0.06`", 
            RowBox[{
             RowBox[{"1.2121212121212122`", " ", "Lap"}], "-", "0.075`"}]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\[Equal]", 
      TagBox[
       FormBox[
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}],
        TraditionalForm],
       TraditionalForm,
       Editable->True]}]}
   },
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.516877847098751*^9, 3.5168778861847973`*^9, {3.516877957108954*^9, 
   3.516877970021532*^9}, 3.516878126339254*^9, {3.5172911538082943`*^9, 
   3.51729123628265*^9}, 3.517291854063579*^9, 3.517293377837091*^9, 
   3.5172934162085*^9}]
}, Open  ]]
},
WindowSize->{1280, 750},
WindowMargins->{{Automatic, -1280}, {Automatic, 23}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"8.0 for Linux x86 (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 121, 2, 43, "Input"],
Cell[691, 26, 1113, 15, 43, "Output"]
}, Open  ]],
Cell[1819, 44, 787, 20, 79, "Input"],
Cell[2609, 66, 1829, 27, 43, "Input"],
Cell[4441, 95, 210, 4, 69, "Text"],
Cell[CellGroupData[{
Cell[4676, 103, 1364, 35, 69, "Input"],
Cell[6043, 140, 2313, 49, 70, "Output"]
}, Open  ]],
Cell[8371, 192, 1274, 32, 43, "Input"],
Cell[CellGroupData[{
Cell[9670, 228, 136, 2, 43, "Input"],
Cell[9809, 232, 5338, 134, 245, "Output"]
}, Open  ]],
Cell[15162, 369, 847, 26, 71, "Input"],
Cell[CellGroupData[{
Cell[16034, 399, 657, 19, 71, "Input"],
Cell[16694, 420, 1817, 30, 43, "Output"],
Cell[18514, 452, 1817, 30, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20368, 487, 505, 10, 43, "Input"],
Cell[20876, 499, 3070, 71, 74, "Output"]
}, Open  ]],
Cell[23961, 573, 379, 10, 43, "Input"],
Cell[CellGroupData[{
Cell[24365, 587, 133, 2, 43, "Input"],
Cell[24501, 591, 5560, 137, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30098, 733, 2435, 57, 101, "Input"],
Cell[32536, 792, 2271, 48, 43, "Output"],
Cell[34810, 842, 2253, 47, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37100, 894, 1072, 26, 121, "Input"],
Cell[38175, 922, 1626, 25, 68, "Output"],
Cell[39804, 949, 1635, 25, 68, "Output"]
}, Open  ]],
Cell[41454, 977, 725, 23, 43, "Input"],
Cell[42182, 1002, 661, 14, 43, "Input",
 CellID->1804033555],
Cell[CellGroupData[{
Cell[42868, 1020, 153, 3, 43, "Input"],
Cell[43024, 1025, 2079, 41, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45140, 1071, 400, 8, 43, "Input"],
Cell[45543, 1081, 1849, 48, 113, "Output"]
}, Open  ]],
Cell[47407, 1132, 793, 24, 71, "Input"],
Cell[48203, 1158, 360, 10, 43, "Input"],
Cell[CellGroupData[{
Cell[48588, 1172, 915, 15, 43, "Input"],
Cell[49506, 1189, 3478, 85, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53021, 1279, 908, 17, 43, "Input"],
Cell[53932, 1298, 6134, 165, 205, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60103, 1468, 494, 11, 43, "Input"],
Cell[60600, 1481, 4956, 128, 125, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65593, 1614, 566, 12, 43, "Input"],
Cell[66162, 1628, 1015, 17, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67214, 1650, 827, 21, 98, "Input"],
Cell[68044, 1673, 4759, 132, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72840, 1810, 935, 21, 43, "Input"],
Cell[73778, 1833, 5513, 151, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79328, 1989, 666, 16, 43, "Input"],
Cell[79997, 2007, 2039, 43, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82073, 2055, 182, 4, 43, "Input"],
Cell[82258, 2061, 2208, 49, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84503, 2115, 134, 3, 43, "Input"],
Cell[84640, 2120, 4410, 116, 147, "Output"]
}, Open  ]],
Cell[89065, 2239, 709, 20, 43, "Input"],
Cell[CellGroupData[{
Cell[89799, 2263, 189, 4, 43, "Input"],
Cell[89991, 2269, 3176, 82, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93204, 2356, 187, 4, 43, "Input"],
Cell[93394, 2362, 613, 13, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94044, 2380, 1302, 28, 67, "Input"],
Cell[95349, 2410, 3344, 90, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98730, 2505, 277, 7, 43, "Input"],
Cell[99010, 2514, 1190, 20, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100237, 2539, 700, 16, 47, "Input"],
Cell[100940, 2557, 2835, 73, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103812, 2635, 517, 12, 43, "Input"],
Cell[104332, 2649, 6053, 161, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110422, 2815, 250, 7, 43, "Input"],
Cell[110675, 2824, 2260, 57, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112972, 2886, 890, 23, 67, "Input"],
Cell[113865, 2911, 3507, 92, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117409, 3008, 768, 18, 43, "Input"],
Cell[118180, 3028, 2744, 74, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120961, 3107, 517, 12, 43, "Input"],
Cell[121481, 3121, 5382, 154, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126900, 3280, 372, 10, 43, "Input"],
Cell[127275, 3292, 2531, 64, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129843, 3361, 208, 4, 43, "Input"],
Cell[130054, 3367, 1619, 51, 124, "Output"]
}, Open  ]],
Cell[131688, 3421, 77, 1, 43, "Input"],
Cell[CellGroupData[{
Cell[131790, 3426, 805, 20, 71, "Input"],
Cell[132598, 3448, 48520, 808, 355, "Output"]
}, Open  ]],
Cell[181133, 4259, 89, 1, 43, "Input"],
Cell[CellGroupData[{
Cell[181247, 4264, 584, 16, 43, "Input"],
Cell[181834, 4282, 92629, 1533, 357, 45105, 753, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274500, 5820, 272, 7, 43, "Input"],
Cell[274775, 5829, 1979, 49, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276791, 5883, 162, 4, 43, "Input"],
Cell[276956, 5889, 1243, 39, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278236, 5933, 874, 26, 110, "Input"],
Cell[279113, 5961, 743, 25, 69, "Output"]
}, Open  ]],
Cell[279871, 5989, 340, 10, 43, "Input"],
Cell[CellGroupData[{
Cell[280236, 6003, 4093, 104, 390, "Input"],
Cell[284332, 6109, 4936, 136, 260, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
